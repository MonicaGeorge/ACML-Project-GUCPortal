[{"E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\index.js":"1","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\setAuthorizationToken.js":"2","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\Login.js":"3","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\App.js":"4","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\getRequest.js":"5","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewRequests.js":"6","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewSickRequests.js":"7","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\reducers\\rootReducer.js":"8","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewChangeRequests.js":"9","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewCompensationRequests.js":"10","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewMaternityRequests.js":"11","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewReplacementRequests.js":"12","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewReceivedReplacementRequests.js":"13","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewSlotLinkingRequests.js":"14","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\history.js":"15","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewReceivedSickRequests.js":"16","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewReceivedCompensationRequests.js":"17","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewReceivedSlotLinkingRequests.js":"18","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewReceivedMaternityRequests.js":"19","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewReceivedChangeRequests.js":"20","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\submittedRequests.js":"21","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\receivedRequests.js":"22","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\callGetRequests.js":"23","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\callGetReceivedRequests.js":"24","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\getRequestsForms.js":"25","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\requestsForms.js":"26"},{"size":537,"mtime":1609536744444,"results":"27","hashOfConfig":"28"},{"size":385,"mtime":1609439881251,"results":"29","hashOfConfig":"28"},{"size":1952,"mtime":1609792727313,"results":"30","hashOfConfig":"28"},{"size":4005,"mtime":1610204596029,"results":"31","hashOfConfig":"28"},{"size":1679,"mtime":1609698845805,"results":"32","hashOfConfig":"28"},{"size":5942,"mtime":1609720589921,"results":"33","hashOfConfig":"28"},{"size":8144,"mtime":1610019346828,"results":"34","hashOfConfig":"28"},{"size":133,"mtime":1609425890992,"results":"35","hashOfConfig":"28"},{"size":8232,"mtime":1610032068380,"results":"36","hashOfConfig":"28"},{"size":8176,"mtime":1610019326057,"results":"37","hashOfConfig":"28"},{"size":9474,"mtime":1610026289540,"results":"38","hashOfConfig":"28"},{"size":8470,"mtime":1610019341146,"results":"39","hashOfConfig":"28"},{"size":6460,"mtime":1609944259443,"results":"40","hashOfConfig":"28"},{"size":8457,"mtime":1610019352557,"results":"41","hashOfConfig":"28"},{"size":87,"mtime":1609609995362,"results":"42","hashOfConfig":"28"},{"size":6152,"mtime":1609944654146,"results":"43","hashOfConfig":"28"},{"size":6167,"mtime":1609944731847,"results":"44","hashOfConfig":"28"},{"size":6449,"mtime":1609944687189,"results":"45","hashOfConfig":"28"},{"size":6838,"mtime":1609942878449,"results":"46","hashOfConfig":"28"},{"size":6184,"mtime":1609944561849,"results":"47","hashOfConfig":"28"},{"size":39163,"mtime":1610191504074,"results":"48","hashOfConfig":"28"},{"size":39631,"mtime":1610190975775,"results":"49","hashOfConfig":"28"},{"size":934,"mtime":1610132748874,"results":"50","hashOfConfig":"28"},{"size":949,"mtime":1610148650114,"results":"51","hashOfConfig":"28"},{"size":2646,"mtime":1610204583771,"results":"52","hashOfConfig":"28"},{"size":15302,"mtime":1610231230513,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"3zent",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"75"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"57"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"57"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"57"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":117,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"57"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":117,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"75"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"75"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"60"},{"filePath":"127","messages":"128","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},"E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\index.js",["130","131"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {createStore} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport rootReducer from './reducers/rootReducer'\r\nimport setAuthorizationToken from './components/setAuthorizationToken'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst store=createStore(rootReducer)\r\nsetAuthorizationToken(localStorage.jwtToken)\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <App />\r\n    </div>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n",["132","133"],"E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\setAuthorizationToken.js",[],["134","135"],"E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\Login.js",[],"E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\App.js",["136","137","138"],"E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\getRequest.js",["139","140","141","142"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass getRequest extends Component{\r\n    state={\r\n        request_id:\"0\"\r\n    }\r\n\r\n\r\n\r\ncomponentDidMount(props){\r\n        console.log(this.props.location.state.request_id)\r\n        // console.log(\"request_id\",this.props.location.state.request_id);}\r\n}\r\n\r\n        render(){\r\n\r\n<div id=\"wrapper\">\r\n   \r\n    <div class=\"right-section\">\r\n       \r\n        <div class=\"container\">44 years old, 6 ft 0 in, 175 lbs\r\n            <p class=\"blue\">Manage My Personal Health Record</p>\r\n            <hr class=\"line\"/>\r\n            <div class=\"info-box\"><span class=\"fontawesome-envelope fa-icon-lg\"></span>Messages (0)\r\n                <br/><span class=\"status\">No New Messages</span>\r\n            </div>\r\n            <div class=\"info-box\"><span class=\"fontawesome-file-alt fa-icon-lg\"></span>\r\n              Chart (1)\r\n                <br/><span class=\"status\">Clinical Summary (1)<br />Education (0)</span>\r\n            </div>\r\n            <div class=\"info-box\"><span class=\"fontawesome-calendar fa-icon-lg\"></span>\r\n              Appointments (0)\r\n                <br/><span class=\"status\">No Future Appt.</span>\r\n            </div>\r\n            <div class=\"info-box\"><span class=\"fontawesome-money fa-icon-lg\"></span>\r\n              Account Balance (0) \r\n                <br/><span class=\"status\">No Outstanding Balance</span>\r\n            </div>\r\n\r\n        </div>\r\n     </div>\r\n</div>\r\n\r\n            return(\r\n                \r\n                <div>Get requests</div>\r\n            )\r\n        }\r\n\r\n}\r\nexport default getRequest",["143","144"],"E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewRequests.js",["145","146","147","148","149"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport '../css/test44.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\n\r\nclass ViewRequests extends Component{\r\n    state={\r\n        requests:[]\r\n    }\r\n    componentDidMount(){\r\n    console.log(\"in view\")\r\n        axios.get('http://localhost:5000/academic/sentReplacementRequests',\r\n        {\r\n            headers:{\r\n                'x-auth-token':localStorage.getItem('jwtToken')\r\n            }\r\n        }\r\n        ).then(res=>{\r\n            console.log(res.data[0].reqType)\r\n            this.setState({requests:res.data})\r\n            console.log(\"new state= \"+this.state.requests)\r\n\r\n        }).catch(console.log(\"error\"))\r\n    }\r\n\r\n         handleClick(e,value){\r\n            e.preventDefault();\r\n            console.log(\"in click \"+value)\r\n           // return \r\n        //     <Redirect\r\n        //     to={{\r\n        //     pathname: \"/ViewAcceptedRequests\",\r\n        //     state: { request_id:value }\r\n        //   }}\r\n        // />\r\n\r\n        }\r\n\r\n        // imgFormatter=(cell,row)=> {\r\n        //     return  <a href=\"/#\" >\r\n        //             <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n        //             </a>;\r\n        // }\r\n        renderRequest=(request, index)=> {\r\n            return (\r\n                \r\n                <tr key={index} className=\"reqTr\" class='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                \r\n                <td className=\"reqTd\" >\r\n\r\n                \r\n                <Link to={{ pathname: '/getRequest', state: { request_id:request.requestID}}} className=\"inTable\">\r\n                {request.requestID}\r\n                </Link>\r\n               </td>\r\n\r\n\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.sentTo}</td>\r\n                </tr>\r\n                \r\n            )\r\n            }    \r\n       \r\n    render(){\r\n        const reqs=this.state.requests;\r\n        var empty=[\"one\"]\r\n            const reqList=reqs.length?(\r\n            empty.map(request=>{\r\n            console.log(\"in mapping \"+request.reqType)\r\n            return(\r\n                <div className=\"containAll\">\r\n\r\n                 <div className=\"containDrop d-inline-block\">\r\n                \r\n                    <Dropdown as={ButtonGroup} className=\"buttons1\">\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\" className=\"buttonName\" >State</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"drop1\">\r\n                    <Dropdown.Item ><Link to=\"/ViewAcceptedRequests\">Accepted</Link></Dropdown.Item>\r\n                    <Dropdown.Item><Link to=\"/ViewRejectedRequests\">Rejected</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewPendingRequests\">Pending</Link></Dropdown.Item>\r\n                \r\n                    \r\n                    <Dropdown.Divider />\r\n                    </Dropdown.Menu>\r\n                </Dropdown>{' '}\r\n                <Dropdown as={ButtonGroup} className=\"buttons2\" >\r\n                <Dropdown.Toggle id=\"dropdown-custom-2\" >R/S</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"drop2\"></Dropdown.Menu>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                    <Dropdown.Item eventKey=\"1\">Sent</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Received</Dropdown.Item>\r\n                \r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\" >Separated link</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>{' '}\r\n                <Dropdown as={ButtonGroup} className=\"buttons3\">\r\n                <Dropdown.Toggle id=\"dropdown-custom-3\"  >Type</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"drop3\"></Dropdown.Menu>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                    <Dropdown.Item eventKey=\"1\">Change Day Off</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Replacement Request</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Annual Leave</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"4\">Sick Leave</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"5\">Maternity Leave</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                 </Dropdown>   \r\n                </div> \r\n\r\n                \r\n\r\n                <div className=\"container containTable\">\r\n                <Table striped bordered hover size=\"sm\" className=\"reqTable\">\r\n                <thead className=\"reqHead\">\r\n                    <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Request ID</th>\r\n                    <th className=\"reqTh\">Request Type</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderRequest)}\r\n                </tbody>\r\n                </Table>\r\n                </div>\r\n                </div>\r\n                        \r\n            \r\n              )\r\n            })\r\n        ):\r\n        (\r\n        <div className=\"center\">No requests yet</div>\r\n        )\r\n\r\n        \r\n        return (\r\n           \r\n           reqList\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewRequests","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewSickRequests.js",["150","151","152","153","154","155","156","157","158","159","160"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport '../css/test44.css'\r\n// import '../css/bootstrap.min.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { CheckCircle, XCircle, XCircleFill } from 'react-bootstrap-icons';\r\n// import Button from 'react-bootstrap/Button'\r\n\r\nclass ViewSickRequests extends Component{\r\n    state={\r\n        requests:[],\r\n        stateRequests:[],\r\n        stateBool:false\r\n        ,warning:\"\",\r\n        cancelWarning:\"\",\r\n        cancelSuccess:\"\",\r\n        reqState:\"\"\r\n    }\r\n    componentDidMount(){\r\n    console.log(\"in maternity view\")\r\n        axios.get('http://localhost:5000/academic/sickRequest',\r\n        {\r\n            headers:{\r\n                'x-auth-token':localStorage.getItem('jwtToken')\r\n            }\r\n        }\r\n        ).then(res=>{\r\n            // console.log(res.data[0].reqType)\r\n            this.setState({requests:res.data.arr,warning:res.data.warning})\r\n            console.log(\"new state= \"+this.state.requests.reqType)\r\n            console.log(\"new state= \"+this.state.warning)\r\n            console.log(\"new state= \"+this.state.requests)\r\n\r\n        }).catch(console.log(\"error\"))\r\n    }\r\n\r\n         handleClick(e,value){\r\n            e.preventDefault();\r\n            console.log(\"in click \"+value)\r\n            \r\n\r\n        }\r\n        handleCancel(e){\r\n            e.preventDefault();\r\n            axios.post('http://localhost:5000/academic/cancelRequest',\r\n            {\r\n                headers:{\r\n                    'x-auth-token':localStorage.getItem('jwtToken')\r\n                }\r\n            }\r\n            ).then(res=>{\r\n                // console.log(res.data[0].reqType)\r\n                // this.setState({requests:res.data.arr,warning:res.data.warning})\r\n                // console.log(\"new state= \"+this.state.requests.reqType)\r\n                // console.log(\"new state= \"+this.state.warning)\r\n                // console.log(\"new state= \"+this.state.requests)\r\n    \r\n            }).catch(\r\n                console.log(\"error\")\r\n                \r\n                )\r\n        }\r\n        handleStateClick(e,value){\r\n            e.preventDefault();\r\n            if(value==\"All\"){\r\n               return this.setState({stateBool:false,reqState:\"\"})\r\n                console.log(\"all= \"+this.state.requests)\r\n            }\r\n            if(this.state.requests.length>0){\r\n               const accept=this.state.requests.filter(request=>{\r\n                   return request.state==value\r\n               })\r\n               console.log(\"accept= \"+accept)\r\n                this.setState({stateRequests:accept,stateBool:true,reqState:value})\r\n                // var reqs=this.state.stateRequests\r\n            }\r\n\r\n        }\r\n        \r\n        renderRequest=(request, index)=> {\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.sickDay}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                {/* <Button variant=\"outline-success\" className=\"buttonResponse\">Accept</Button> */}\r\n               <a > <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></a>\r\n                {/* <Button variant=\"outline-danger\" className=\"buttonResponse3\">Cancel</Button> */}\r\n              </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            }    \r\n       \r\n    render(){\r\n        var reqs=[];\r\n        if(!this.state.stateBool){\r\n            console.log(\"here\")\r\n         reqs=this.state.requests;\r\n        }\r\n        else if(this.state.stateBool){\r\n            console.log(\"other\")\r\n         reqs=this.state.stateRequests;\r\n        }\r\n        var empty=[\"one\"]\r\n            const reqList=reqs.length?(\r\n            empty.map(request=>{\r\n            console.log(\"in mapping \"+request.reqType)\r\n            return(\r\n\r\n                <div className=\"containAll\">\r\n                \r\n            \r\n            \r\n            <div className=\"containDrop\">\r\n            <span className=\"maternityH\">Sick Leave Requests</span>\r\n                      <Dropdown as={ButtonGroup}className=\"buttons2\" >\r\n                <Dropdown.Toggle id=\"dropdown-custom-2\" className=\"pickBtn\">Request Type</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                    <Dropdown.Item active><Link to=\"/ViewSickRequests\">Sick Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item> <Link to=\"/ViewCompensationRequests\">Compensation Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewMaternityRequests\">Maternity Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewSlotLinkingRequests\">Slot Linking Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewReplacementRequests\">Replacement Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewChangeRequests\">Change Day-Off Requests</Link></Dropdown.Item>\r\n             \r\n             \r\n                    </Dropdown.Menu>\r\n                </Dropdown>{' '} \r\n\r\n                    <Dropdown as={ButtonGroup} className=\"buttons1\">\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\" className=\"pickBtn\" >State</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"drop1\">\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"All\")}>All</Button></Dropdown.Item >\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Accepted\")}>Accepted</Button></Dropdown.Item >\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"rejectButton\" onClick={(e)=>this.handleStateClick(e,\"Rejected\")}>Rejected</Button></Dropdown.Item >\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"pendingButton\" onClick={(e)=>this.handleStateClick(e,\"Pending\")}>Pending</Button></Dropdown.Item >\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n               \r\n              \r\n                </div>      \r\n\r\n                \r\n\r\n                <div className=\" containMaternityTable  \">\r\n                {/* <span id=\"spanSurrounder\"> */}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                    <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Documents</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>\r\n\r\n                \r\n                </div>\r\n                        \r\n            \r\n              )\r\n            })\r\n        ):\r\n        (\r\n        <div className=\"center\">No requests yet</div>\r\n        )\r\n\r\n        \r\n        return (\r\n            <div>\r\n           {reqList}\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewSickRequests",["161","162"],"E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\reducers\\rootReducer.js",[],"E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewChangeRequests.js",["163","164","165","166","167","168","169","170","171","172","173"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport '../css/test44.css'\r\n// import '../css/bootstrap.min.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { CheckCircle, XCircle, XCircleFill } from 'react-bootstrap-icons';\r\n// import Button from 'react-bootstrap/Button'\r\n\r\nclass ViewChangeRequests extends Component{\r\n    state={\r\n        requests:[],\r\n        stateRequests:[],\r\n        stateBool:false\r\n        ,warning:\"\",\r\n        cancelWarning:\"\",\r\n        cancelSuccess:\"\",\r\n        reqState:\"\"\r\n    }\r\n    componentDidMount(){\r\n    console.log(\"in maternity view\")\r\n        axios.get('http://localhost:5000/academic/changeDayOffRequest',\r\n        {\r\n            headers:{\r\n                'x-auth-token':localStorage.getItem('jwtToken')\r\n            }\r\n        }\r\n        ).then(res=>{\r\n            // console.log(res.data[0].reqType)\r\n            this.setState({requests:res.data.arr,warning:res.data.warning})\r\n            console.log(\"new state= \"+this.state.requests.reqType)\r\n            console.log(\"new state= \"+this.state.warning)\r\n            console.log(\"new state= \"+this.state.requests)\r\n\r\n        }).catch(console.log(\"error\"))\r\n    }\r\n\r\n         handleClick(e,value){\r\n            e.preventDefault();\r\n            console.log(\"in click \"+value)\r\n            \r\n\r\n        }\r\n        handleCancel(e){\r\n            e.preventDefault();\r\n            axios.post('http://localhost:5000/academic/cancelRequest',\r\n            {\r\n                headers:{\r\n                    'x-auth-token':localStorage.getItem('jwtToken')\r\n                }\r\n            }\r\n            ).then(res=>{\r\n                // console.log(res.data[0].reqType)\r\n                // this.setState({requests:res.data.arr,warning:res.data.warning})\r\n                // console.log(\"new state= \"+this.state.requests.reqType)\r\n                // console.log(\"new state= \"+this.state.warning)\r\n                // console.log(\"new state= \"+this.state.requests)\r\n    \r\n            }).catch(\r\n                console.log(\"error\")\r\n                \r\n                )\r\n        }\r\n        handleStateClick(e,value){\r\n            e.preventDefault();\r\n            if(value==\"All\"){\r\n               return this.setState({stateBool:false,reqState:\"\"})\r\n                console.log(\"all= \"+this.state.requests)\r\n            }\r\n            if(this.state.requests.length>0){\r\n               const accept=this.state.requests.filter(request=>{\r\n                   return request.state==value\r\n               })\r\n               console.log(\"accept= \"+accept)\r\n                this.setState({stateRequests:accept,stateBool:true,reqState:value})\r\n                // var reqs=this.state.stateRequests\r\n            }\r\n\r\n        }\r\n        renderRequest=(request, index)=> {\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                \r\n                \r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTdSick\">{request.newDayOff}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                {/* <Button variant=\"outline-success\" className=\"buttonResponse\">Accept</Button> */}\r\n               <a > <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></a>\r\n                {/* <Button variant=\"outline-danger\" className=\"buttonResponse3\">Cancel</Button> */}\r\n              </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            }    \r\n       \r\n    render(){\r\n        var reqs=[];\r\n        if(!this.state.stateBool){\r\n            console.log(\"here\")\r\n         reqs=this.state.requests;\r\n        }\r\n        else if(this.state.stateBool){\r\n            console.log(\"other\")\r\n         reqs=this.state.stateRequests;\r\n        }\r\n        var empty=[\"one\"]\r\n            const reqList=reqs.length?(\r\n            empty.map(request=>{\r\n            console.log(\"in mapping \"+request.reqType)\r\n            return(\r\n\r\n                <div className=\"containAll\">\r\n                \r\n            \r\n            \r\n            <div className=\"containDrop\">\r\n            <span className=\"maternityH\">Change Day-Off Requests</span>\r\n                      <Dropdown as={ButtonGroup}className=\"buttons2\" >\r\n                <Dropdown.Toggle id=\"dropdown-custom-2\" className=\"pickBtn\">Request Type</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                    <Dropdown.Item ><Link to=\"/ViewSickRequests\">Sick Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item > <Link to=\"/ViewCompensationRequests\">Compensation Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewMaternityRequests\">Maternity Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewSlotLinkingRequests\">Slot Linking Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewReplacementRequests\">Replacement Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item active><Link to=\"/ViewChangeRequests\">Change Day-Off Requests</Link></Dropdown.Item>\r\n             \r\n             \r\n                    </Dropdown.Menu>\r\n                </Dropdown>{' '} \r\n\r\n                    <Dropdown as={ButtonGroup} className=\"buttons1\">\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\" className=\"pickBtn\" >State</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"drop1\">\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"All\")}>All</Button></Dropdown.Item >\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Accepted\")}>Accepted</Button></Dropdown.Item >\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"rejectButton\" onClick={(e)=>this.handleStateClick(e,\"Rejected\")}>Rejected</Button></Dropdown.Item >\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"pendingButton\" onClick={(e)=>this.handleStateClick(e,\"Pending\")}>Pending</Button></Dropdown.Item >\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n               \r\n              \r\n                </div>      \r\n\r\n                \r\n\r\n                <div className=\" containMaternityTable  \">\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">New Day-Off</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderRequest)}\r\n                </tbody>\r\n                </Table>\r\n                </div>\r\n\r\n                \r\n                </div>\r\n                        \r\n            \r\n              )\r\n            })\r\n        ):\r\n        (\r\n            <div className=\"center\">\r\n            <h3 className=\"reqTitle\">Change Day-Off Requests</h3>\r\n           <h4 className=\"noReq\"> No requests yet</h4>\r\n            </div>\r\n        )\r\n\r\n        \r\n        return (\r\n            <div>\r\n           {reqList}\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewChangeRequests","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewCompensationRequests.js",["174","175","176","177","178","179","180","181","182","183","184"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport '../css/test44.css'\r\n// import '../css/bootstrap.min.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { CheckCircle, XCircle, XCircleFill } from 'react-bootstrap-icons';\r\n// import Button from 'react-bootstrap/Button'\r\n\r\nclass ViewCompensationRequests extends Component{\r\n    state={\r\n        requests:[],\r\n        stateRequests:[],\r\n        stateBool:false\r\n        ,warning:\"\",\r\n        cancelWarning:\"\",\r\n        cancelSuccess:\"\",\r\n        reqState:\"\"\r\n    }\r\n    componentDidMount(){\r\n    console.log(\"in maternity view\")\r\n        axios.get('http://localhost:5000/academic/compensationRequest',\r\n        {\r\n            headers:{\r\n                'x-auth-token':localStorage.getItem('jwtToken')\r\n            }\r\n        }\r\n        ).then(res=>{\r\n            // console.log(res.data[0].reqType)\r\n            this.setState({requests:res.data.arr,warning:res.data.warning})\r\n            console.log(\"new state= \"+this.state.requests.reqType)\r\n            console.log(\"new state= \"+this.state.warning)\r\n            console.log(\"new state= \"+this.state.requests)\r\n\r\n        }).catch(console.log(\"error\"))\r\n    }\r\n\r\n         handleClick(e,value){\r\n            e.preventDefault();\r\n            console.log(\"in click \"+value)\r\n            \r\n\r\n        }\r\n        handleCancel(e){\r\n            e.preventDefault();\r\n            axios.post('http://localhost:5000/academic/cancelRequest',\r\n            {\r\n                headers:{\r\n                    'x-auth-token':localStorage.getItem('jwtToken')\r\n                }\r\n            }\r\n            ).then(res=>{\r\n                // console.log(res.data[0].reqType)\r\n                // this.setState({requests:res.data.arr,warning:res.data.warning})\r\n                // console.log(\"new state= \"+this.state.requests.reqType)\r\n                // console.log(\"new state= \"+this.state.warning)\r\n                // console.log(\"new state= \"+this.state.requests)\r\n    \r\n            }).catch(\r\n                console.log(\"error\")\r\n                \r\n                )\r\n        }\r\n        handleStateClick(e,value){\r\n            e.preventDefault();\r\n            if(value==\"All\"){\r\n               return this.setState({stateBool:false,reqState:\"\"})\r\n                console.log(\"all= \"+this.state.requests)\r\n            }\r\n            if(this.state.requests.length>0){\r\n               const accept=this.state.requests.filter(request=>{\r\n                   return request.state==value\r\n               })\r\n               console.log(\"accept= \"+accept)\r\n                this.setState({stateRequests:accept,stateBool:true,reqState:value})\r\n                // var reqs=this.state.stateRequests\r\n            }\r\n\r\n        }\r\n        renderRequest=(request, index)=> {\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                \r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                 <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.missedDay}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                {/* <Button variant=\"outline-success\" className=\"buttonResponse\">Accept</Button> */}\r\n               <a > <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></a>\r\n                {/* <Button variant=\"outline-danger\" className=\"buttonResponse3\">Cancel</Button> */}\r\n              </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            }    \r\n       \r\n    render(){\r\n        var reqs=[];\r\n        if(!this.state.stateBool){\r\n            console.log(\"here\")\r\n         reqs=this.state.requests;\r\n        }\r\n        else if(this.state.stateBool){\r\n            console.log(\"other\")\r\n         reqs=this.state.stateRequests;\r\n        }\r\n        var empty=[\"one\"]\r\n            const reqList=reqs.length?(\r\n            empty.map(request=>{\r\n            console.log(\"in mapping \"+request.reqType)\r\n            return(\r\n\r\n                <div className=\"containAll\">\r\n                \r\n            \r\n            \r\n            <div className=\"containDrop\">\r\n            <span className=\"maternityH\">Maternity Requests</span>\r\n                      <Dropdown as={ButtonGroup}className=\"buttons2\" >\r\n                <Dropdown.Toggle id=\"dropdown-custom-2\" className=\"pickBtn\">Request Type</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                    <Dropdown.Item ><Link to=\"/ViewSickRequests\">Sick Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item active> <Link to=\"/ViewCompensationRequests\">Compensation Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewMaternityRequests\">Maternity Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewSlotLinkingRequests\">Slot Linking Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewReplacementRequests\">Replacement Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewChangeRequests\">Change Day-Off Requests</Link></Dropdown.Item>\r\n             \r\n             \r\n                    </Dropdown.Menu>\r\n                </Dropdown>{' '} \r\n\r\n                    <Dropdown as={ButtonGroup} className=\"buttons1\">\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\" className=\"pickBtn\" >State</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"drop1\">\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"All\")}>All</Button></Dropdown.Item >\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Accepted\")}>Accepted</Button></Dropdown.Item >\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"rejectButton\" onClick={(e)=>this.handleStateClick(e,\"Rejected\")}>Rejected</Button></Dropdown.Item >\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"pendingButton\" onClick={(e)=>this.handleStateClick(e,\"Pending\")}>Pending</Button></Dropdown.Item >\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n               \r\n              \r\n                </div>      \r\n\r\n                \r\n\r\n                <div className=\" containMaternityTable  \">\r\n                {/* <span id=\"spanSurrounder\"> */}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Missed Day</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>\r\n\r\n                \r\n                </div>\r\n                        \r\n            \r\n              )\r\n            })\r\n        ):\r\n        (\r\n        <div className=\"center\">No requests yet</div>\r\n        )\r\n\r\n        \r\n        return (\r\n            <div>\r\n           {reqList}\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewCompensationRequests","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewMaternityRequests.js",["185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport '../css/test44.css'\r\n// import '../css/bootstrap.min.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { CheckCircle, XCircle, XCircleFill } from 'react-bootstrap-icons';\r\n// import Button from 'react-bootstrap/Button'\r\n\r\nclass ViewMaternityRequests extends Component{\r\n    \r\n    state={\r\n        requests:[],\r\n        stateRequests:[],\r\n        stateBool:false\r\n        ,warning:\"\",\r\n        cancelWarning:\"\",\r\n        cancelSuccess:\"\",\r\n        reqState:\"\"\r\n    }\r\n    componentDidMount(){\r\n    console.log(\"in maternity view \"+ localStorage.getItem('jwtToken'))\r\n        axios.get('http://localhost:5000/academic/maternityRequest',\r\n        {\r\n            headers:{\r\n                'x-auth-token':localStorage.getItem('jwtToken')\r\n            }\r\n        }\r\n        ).then(res=>{\r\n            // console.log(res.data[0].reqType)\r\n            this.setState({requests:res.data.arr,warning:res.data.warning,stateBool:false})\r\n            console.log(\"new state= \"+this.state.requests.reqType)\r\n            console.log(\"new state= \"+this.state.warning)\r\n            console.log(\"new state= \"+this.state.requests)\r\n            var reqs=this.state.requests\r\n\r\n        }).catch(console.log(\"error\"))\r\n    }\r\n        handleClick(e,value){\r\n            e.preventDefault();\r\n            console.log(\"in cancel btn clicked\")\r\n            console.log(\"token \"+localStorage.getItem('jwtToken'))\r\n          \r\n            axios.request({\r\n                method: 'POST',\r\n                url: 'http://localhost:5000/academic/cancelRequest',\r\n                headers: {\r\n                    'x-auth-token':localStorage.getItem('jwtToken')\r\n                },\r\n                data: {\r\n                    requestID: value\r\n                },\r\n              \r\n              }).then(res=>{\r\n                console.log(\"successfull\")\r\n                this.setState({cancelSuccess:res.data});\r\n    \r\n            }).catch(error=>{\r\n                console.log(\"cancel error= \"+error.response.data)\r\n                this.setState({cancelWarning:error.response.data});\r\n                })\r\n        }\r\n        handleStateClick(e,value){\r\n            e.preventDefault();\r\n            if(value==\"All\"){\r\n               return this.setState({stateBool:false,reqState:\"\"})\r\n                console.log(\"all= \"+this.state.requests)\r\n            }\r\n            if(this.state.requests.length>0){\r\n               const accept=this.state.requests.filter(request=>{\r\n                   return request.state==value\r\n               })\r\n               console.log(\"accept= \"+accept)\r\n                this.setState({stateRequests:accept,stateBool:true,reqState:value})\r\n                // var reqs=this.state.stateRequests\r\n            }\r\n\r\n        }\r\n        renderRequest=(request, index)=> {\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\">\r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.maternityDoc}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n\r\n                <td className=\"reqTd\">\r\n               <Button variant=\"outline-light\" size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n               <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></Button>\r\n                </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            }    \r\n       \r\n    render(){\r\n        var reqs=[];\r\n        if(!this.state.stateBool){\r\n            console.log(\"here\")\r\n         reqs=this.state.requests;\r\n        }\r\n        else if(this.state.stateBool){\r\n            console.log(\"other\")\r\n         reqs=this.state.stateRequests;\r\n        }\r\n        var empty=[\"one\"]\r\n            const reqList=reqs.length?(\r\n            empty.map(request=>{\r\n            console.log(\"in mapping \"+request.reqType)\r\n            return(\r\n\r\n                <div className=\"containAll\">\r\n                \r\n            \r\n            \r\n            <div className=\"containDrop\">\r\n            <span className=\"maternityH\">Maternity Requests</span>\r\n                      <Dropdown as={ButtonGroup}className=\"buttons2\" >\r\n                <Dropdown.Toggle id=\"dropdown-custom-2\" className=\"pickBtn\">Request Type</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                    <Dropdown.Item ><Link to=\"/ViewSickRequests\">Sick Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item> <Link to=\"/ViewCompensationRequests\">Compensation Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item active><Link to=\"/ViewMaternityRequests\">Maternity Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewSlotLinkingRequests\">Slot Linking Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewReplacementRequests\">Replacement Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewChangeRequests\">Change Day-Off Requests</Link></Dropdown.Item>\r\n             \r\n             \r\n                    </Dropdown.Menu>\r\n                </Dropdown>{' '} \r\n\r\n                    <Dropdown as={ButtonGroup} className=\"buttons1\">\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\" className=\"pickBtn\" >State</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"drop1\">\r\n                    {/* <Dropdown.Item ><Link to=\"/ViewAcceptedMaternityRequests\">Accepted</Link></Dropdown.Item> */}\r\n             \r\n                  \r\n                    {this.state.reqState!=\"\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"All\")}>All</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"All\")}>All</Button></Dropdown.Item >}\r\n                    {this.state.reqState!=\"Accepted\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Accepted\")}>Accepted</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"Accepted\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Accepted\")}>Accepted</Button></Dropdown.Item >} \r\n                    {this.state.reqState!=\"Rejected\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Rejected\")}>Rejected</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"Rejected\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Rejected\")}>Rejected</Button></Dropdown.Item >}\r\n                    {this.state.reqState!=\"Pending\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Pending\")}>Rejected</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"Pending\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Pending\")}>Rejected</Button></Dropdown.Item >}\r\n                    \r\n                    \r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n               \r\n              \r\n                </div>      \r\n\r\n                \r\n\r\n                <div className=\" containMaternityTable  \">\r\n                {/* <span id=\"spanSurrounder\"> */}\r\n\r\n                {this.state.cancelWarning!=\"\" && <h5 class=\"cancelWarning\">{this.state.cancelWarning}</h5>}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                    <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Documents</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>\r\n\r\n                \r\n                </div>\r\n                        \r\n            \r\n              )\r\n            })\r\n        ):\r\n        (\r\n        <div className=\"center\">\r\n        <h3>Maternity Requests</h3>\r\n       <h4> No requests yet</h4>\r\n        </div>\r\n        )\r\n\r\n        \r\n        return (\r\n            <div>\r\n           {reqList}\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewMaternityRequests","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewReplacementRequests.js",["204","205","206","207","208","209","210","211","212","213","214"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n// import '../css/test44.css'\r\nimport '../css/ReplacementReq.css'\r\n// import '../css/bootstrap.min.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { CheckCircle, XCircle, XCircleFill } from 'react-bootstrap-icons';\r\n// import Button from 'react-bootstrap/Button'\r\n\r\nclass ViewReplacementRequests extends Component{\r\n    state={\r\n        requests:[],\r\n        stateRequests:[],\r\n        stateBool:false\r\n        ,warning:\"\",\r\n        cancelWarning:\"\",\r\n        cancelSuccess:\"\",\r\n        reqState:\"\"\r\n    }\r\n    componentDidMount(){\r\n    console.log(\"in maternity view\")\r\n        axios.get('http://localhost:5000/academic/sentReplacementRequest',\r\n        {\r\n            headers:{\r\n                'x-auth-token':localStorage.getItem('jwtToken')\r\n            }\r\n        }\r\n        ).then(res=>{\r\n            // console.log(res.data[0].reqType)\r\n            this.setState({requests:res.data.arr,warning:res.data.warning})\r\n            console.log(\"new state= \"+this.state.requests.reqType)\r\n            console.log(\"new state= \"+this.state.warning)\r\n            console.log(\"new state= \"+this.state.requests)\r\n\r\n        }).catch(console.log(\"error\"))\r\n    }\r\n\r\n         handleClick(e,value){\r\n            e.preventDefault();\r\n            console.log(\"in click \"+value)\r\n            \r\n\r\n        }\r\n        handleCancel(e){\r\n            e.preventDefault();\r\n            axios.post('http://localhost:5000/academic/cancelRequest',\r\n            {\r\n                headers:{\r\n                    'x-auth-token':localStorage.getItem('jwtToken')\r\n                }\r\n            }\r\n            ).then(res=>{\r\n                // console.log(res.data[0].reqType)\r\n                // this.setState({requests:res.data.arr,warning:res.data.warning})\r\n                // console.log(\"new state= \"+this.state.requests.reqType)\r\n                // console.log(\"new state= \"+this.state.warning)\r\n                // console.log(\"new state= \"+this.state.requests)\r\n    \r\n            }).catch(\r\n                console.log(\"error\")\r\n                \r\n                )\r\n        }\r\n        handleStateClick(e,value){\r\n            e.preventDefault();\r\n            if(value==\"All\"){\r\n               return this.setState({stateBool:false,reqState:\"\"})\r\n                console.log(\"all= \"+this.state.requests)\r\n            }\r\n            if(this.state.requests.length>0){\r\n               const accept=this.state.requests.filter(request=>{\r\n                   return request.state==value\r\n               })\r\n               console.log(\"accept= \"+accept)\r\n                this.setState({stateRequests:accept,stateBool:true,reqState:value})\r\n                // var reqs=this.state.stateRequests\r\n            }\r\n\r\n        }\r\n        renderRequest=(request, index)=> {\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                \r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.slotDate}</td>\r\n                <td className=\"reqTd\">{request.slotNum}</td>\r\n                <td className=\"reqTd\">{request.slotLoc}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                {/* <Button variant=\"outline-success\" className=\"buttonResponse\">Accept</Button> */}\r\n               <a > <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></a>\r\n                {/* <Button variant=\"outline-danger\" className=\"buttonResponse3\">Cancel</Button> */}\r\n              </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            }    \r\n       \r\n    render(){\r\n        var reqs=[];\r\n        if(!this.state.stateBool){\r\n            console.log(\"here\")\r\n         reqs=this.state.requests;\r\n        }\r\n        else if(this.state.stateBool){\r\n            console.log(\"other\")\r\n         reqs=this.state.stateRequests;\r\n        }\r\n        var empty=[\"one\"]\r\n            const reqList=reqs.length?(\r\n            empty.map(request=>{\r\n            console.log(\"in mapping \"+request.reqType)\r\n            return(\r\n\r\n                <div className=\"containAll\">\r\n                \r\n            \r\n            \r\n            <div className=\"containDrop\">\r\n            <span className=\"maternityH\">Replacement Requests</span>\r\n                      <Dropdown as={ButtonGroup}className=\"buttons2Rep\" >\r\n                <Dropdown.Toggle id=\"dropdown-custom-2\" className=\"pickBtn\">Request Type</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                    <Dropdown.Item ><Link to=\"/ViewSickRequests\">Sick Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item> <Link to=\"/ViewCompensationRequests\">Compensation Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewMaternityRequests\">Maternity Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewSlotLinkingRequests\">Slot Linking Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item active><Link to=\"/ViewReplacementRequests\">Replacement Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewChangeRequests\">Change Day-Off Requests</Link></Dropdown.Item>\r\n             \r\n             \r\n                    </Dropdown.Menu>\r\n                </Dropdown>{' '} \r\n\r\n                    <Dropdown as={ButtonGroup} className=\"buttons1Rep\">\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\" className=\"pickBtn\" >State</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"drop1\">\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"All\")}>All</Button></Dropdown.Item >\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Accepted\")}>Accepted</Button></Dropdown.Item >\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"rejectButton\" onClick={(e)=>this.handleStateClick(e,\"Rejected\")}>Rejected</Button></Dropdown.Item >\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"pendingButton\" onClick={(e)=>this.handleStateClick(e,\"Pending\")}>Pending</Button></Dropdown.Item >\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n               \r\n              \r\n                </div>      \r\n\r\n                \r\n\r\n                <div className=\" containMaternityTable  \">\r\n                {/* <span id=\"spanSurrounder\"> */}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                    <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Slot Date</th>\r\n                    <th className=\"reqTh\">Slot Number</th>\r\n                    <th className=\"reqTh\">Slot Location</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>\r\n\r\n                \r\n                </div>\r\n                        \r\n            \r\n              )\r\n            })\r\n        ):\r\n        (\r\n        <div className=\"center\">No requests yet</div>\r\n        )\r\n\r\n        \r\n        return (\r\n            <div>\r\n           {reqList}\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewReplacementRequests","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewReceivedReplacementRequests.js",["215","216","217","218","219","220","221","222","223"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n// import '../css/test44.css'\r\nimport '../css/ReplacementReq.css'\r\n// import '../css/bootstrap.min.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { CheckCircle, XCircle, XCircleFill } from 'react-bootstrap-icons';\r\n// import Button from 'react-bootstrap/Button'\r\n\r\nclass ViewReceivedReplacementRequests extends Component{\r\n    state={\r\n        requests:[]\r\n        ,warning:\"\"\r\n    }\r\n    componentDidMount(){\r\n    console.log(\"in maternity view\")\r\n        axios.get('http://localhost:5000/academic/receivedReplacementRequest',\r\n        {\r\n            headers:{\r\n                'x-auth-token':localStorage.getItem('jwtToken')\r\n            }\r\n        }\r\n        ).then(res=>{\r\n            // console.log(res.data[0].reqType)\r\n            this.setState({requests:res.data.arr,warning:res.data.warning})\r\n            console.log(\"new state= \"+this.state.requests.reqType)\r\n            console.log(\"new state= \"+this.state.warning)\r\n            console.log(\"new state= \"+this.state.requests)\r\n\r\n        }).catch(console.log(\"error\"))\r\n    }\r\n\r\n         handleClick(e,value){\r\n            e.preventDefault();\r\n            console.log(\"in click \"+value)\r\n            \r\n\r\n        }\r\n        handleCancel(e){\r\n            e.preventDefault();\r\n            axios.post('http://localhost:5000/academic/cancelRequest',\r\n            {\r\n                headers:{\r\n                    'x-auth-token':localStorage.getItem('jwtToken')\r\n                }\r\n            }\r\n            ).then(res=>{\r\n                // console.log(res.data[0].reqType)\r\n                // this.setState({requests:res.data.arr,warning:res.data.warning})\r\n                // console.log(\"new state= \"+this.state.requests.reqType)\r\n                // console.log(\"new state= \"+this.state.warning)\r\n                // console.log(\"new state= \"+this.state.requests)\r\n    \r\n            }).catch(\r\n                console.log(\"error\")\r\n                \r\n                )\r\n        }\r\n        \r\n        renderRequest=(request, index)=> {\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                \r\n               \r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.slotDate}</td>\r\n                <td className=\"reqTd\">{request.slotNum}</td>\r\n                <td className=\"reqTd\">{request.slotLoc}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                {/* <Button variant=\"outline-success\" className=\"buttonResponse\">Accept</Button> */}\r\n               <a > <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></a>\r\n                {/* <Button variant=\"outline-danger\" className=\"buttonResponse3\">Cancel</Button> */}\r\n              </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            }    \r\n       \r\n    render(){\r\n        const reqs=this.state.requests;\r\n        var empty=[\"one\"]\r\n            const reqList=reqs.length?(\r\n            empty.map(request=>{\r\n            console.log(\"in mapping \"+request.reqType)\r\n            return(\r\n\r\n                <div className=\"containAll\">\r\n                \r\n            \r\n            \r\n            <div className=\"containDrop\">\r\n            <span className=\"maternityH\">Replacement Requests</span>\r\n                      <Dropdown as={ButtonGroup}className=\"buttons2\" >\r\n                <Dropdown.Toggle id=\"dropdown-custom-2\" className=\"pickBtn\">Request Type</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                    <Dropdown.Item ><Link to=\"/ViewSickRequests\">Sick Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item> <Link to=\"/ViewCompensationRequests\">Compensation Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewMaternityRequests\">Maternity Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewSlotLinkingRequests\">Slot Linking Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item active><Link to=\"/ViewReplacementRequests\">Replacement Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewChangeRequests\">Change Day-Off Requests</Link></Dropdown.Item>\r\n             \r\n             \r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n               \r\n              \r\n                </div>      \r\n\r\n                \r\n\r\n                <div className=\" containMaternityTable  \">\r\n                {/* <span id=\"spanSurrounder\"> */}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Slot Date</th>\r\n                    <th className=\"reqTh\">Slot Number</th>\r\n                    <th className=\"reqTh\">Slot Location</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>\r\n\r\n                \r\n                </div>\r\n                        \r\n            \r\n              )\r\n            })\r\n        ):\r\n        (\r\n        <div className=\"center\">No requests yet</div>\r\n        )\r\n\r\n        \r\n        return (\r\n            <div>\r\n           {reqList}\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewReceivedReplacementRequests","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewSlotLinkingRequests.js",["224","225","226","227","228","229","230","231","232","233","234"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n// import '../css/test44.css'\r\nimport '../css/SlotReq.css'\r\n// import '../css/bootstrap.min.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { CheckCircle, XCircle, XCircleFill } from 'react-bootstrap-icons';\r\n// import Button from 'react-bootstrap/Button'\r\n\r\nclass ViewSlotLinkingRequests extends Component{\r\n    state={\r\n        requests:[],\r\n        stateRequests:[],\r\n        stateBool:false\r\n        ,warning:\"\",\r\n        cancelWarning:\"\",\r\n        cancelSuccess:\"\",\r\n        reqState:\"\"\r\n    }\r\n    componentDidMount(){\r\n    console.log(\"in maternity view\")\r\n        axios.get('http://localhost:5000/academic/slotLinkingRequest',\r\n        {\r\n            headers:{\r\n                'x-auth-token':localStorage.getItem('jwtToken')\r\n            }\r\n        }\r\n        ).then(res=>{\r\n            // console.log(res.data[0].reqType)\r\n            this.setState({requests:res.data.arr,warning:res.data.warning})\r\n            console.log(\"new state= \"+this.state.requests.reqType)\r\n            console.log(\"new state= \"+this.state.warning)\r\n            console.log(\"new state= \"+this.state.requests)\r\n\r\n        }).catch(console.log(\"error\"))\r\n    }\r\n\r\n         handleClick(e,value){\r\n            e.preventDefault();\r\n            console.log(\"in click \"+value)\r\n            \r\n\r\n        }\r\n        handleCancel(e){\r\n            e.preventDefault();\r\n            axios.post('http://localhost:5000/academic/cancelRequest',\r\n            {\r\n                headers:{\r\n                    'x-auth-token':localStorage.getItem('jwtToken')\r\n                }\r\n            }\r\n            ).then(res=>{\r\n                // console.log(res.data[0].reqType)\r\n                // this.setState({requests:res.data.arr,warning:res.data.warning})\r\n                // console.log(\"new state= \"+this.state.requests.reqType)\r\n                // console.log(\"new state= \"+this.state.warning)\r\n                // console.log(\"new state= \"+this.state.requests)\r\n    \r\n            }).catch(\r\n                console.log(\"error\")\r\n                \r\n                )\r\n        }\r\n        handleStateClick(e,value){\r\n            e.preventDefault();\r\n            if(value==\"All\"){\r\n               return this.setState({stateBool:false,reqState:\"\"})\r\n                console.log(\"all= \"+this.state.requests)\r\n            }\r\n            if(this.state.requests.length>0){\r\n               const accept=this.state.requests.filter(request=>{\r\n                   return request.state==value\r\n               })\r\n               console.log(\"accept= \"+accept)\r\n                this.setState({stateRequests:accept,stateBool:true,reqState:value})\r\n                // var reqs=this.state.stateRequests\r\n            }\r\n\r\n        }\r\n        renderRequest=(request, index)=> {\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                \r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.slotDay}</td>\r\n                <td className=\"reqTd\">{request.slotNum}</td>\r\n                <td className=\"reqTd\">{request.courseID}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                {/* <Button variant=\"outline-success\" className=\"buttonResponse\">Accept</Button> */}\r\n               <a > <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></a>\r\n                {/* <Button variant=\"outline-danger\" className=\"buttonResponse3\">Cancel</Button> */}\r\n              </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            }    \r\n       \r\n    render(){\r\n        var reqs=[];\r\n        if(!this.state.stateBool){\r\n            console.log(\"here\")\r\n         reqs=this.state.requests;\r\n        }\r\n        else if(this.state.stateBool){\r\n            console.log(\"other\")\r\n         reqs=this.state.stateRequests;\r\n        }\r\n        var empty=[\"one\"]\r\n            const reqList=reqs.length?(\r\n            empty.map(request=>{\r\n            console.log(\"in mapping \"+request.reqType)\r\n            return(\r\n\r\n                <div className=\"containAll\">\r\n                \r\n            \r\n            \r\n            <div className=\"containDrop\">\r\n            <span className=\"maternityH\">Slot Linking Requests</span>\r\n                      <Dropdown as={ButtonGroup}className=\"buttons2Slot\" >\r\n                <Dropdown.Toggle id=\"dropdown-custom-2\" className=\"pickBtn\">Request Type</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                    <Dropdown.Item ><Link to=\"/ViewSickRequests\">Sick Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item> <Link to=\"/ViewCompensationRequests\">Compensation Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewMaternityRequests\">Maternity Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item active><Link to=\"/ViewSlotLinkingRequests\">Slot Linking Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewReplacementRequests\">Replacement Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewChangeRequests\">Change Day-Off Requests</Link></Dropdown.Item>\r\n             \r\n             \r\n                    </Dropdown.Menu>\r\n                </Dropdown>{' '} \r\n\r\n                    <Dropdown as={ButtonGroup} className=\"buttons1Slot\">\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\" className=\"pickBtn\" >State</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"drop1\">\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"All\")}>All</Button></Dropdown.Item >\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Accepted\")}>Accepted</Button></Dropdown.Item >\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"rejectButton\" onClick={(e)=>this.handleStateClick(e,\"Rejected\")}>Rejected</Button></Dropdown.Item >\r\n                    <Dropdown.Item > <Button variant=\"outline-light\" size=\"sm\" className=\"pendingButton\" onClick={(e)=>this.handleStateClick(e,\"Pending\")}>Pending</Button></Dropdown.Item >\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n               \r\n              \r\n                </div>      \r\n\r\n                \r\n\r\n                <div className=\" containMaternityTable  \">\r\n                {/* <span id=\"spanSurrounder\"> */}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                    <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Slot Day</th>\r\n                    <th className=\"reqTh\">Slot Number</th>\r\n                    <th className=\"reqTh\">Course ID</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>\r\n\r\n                \r\n                </div>\r\n                        \r\n            \r\n              )\r\n            })\r\n        ):\r\n        (\r\n        <div className=\"center\">No requests yet</div>\r\n        )\r\n\r\n        \r\n        return (\r\n            <div>\r\n           {reqList}\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewSlotLinkingRequests","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\history.js",[],"E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewReceivedSickRequests.js",["235","236","237","238","239","240","241","242","243"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport '../css/test44.css'\r\n// import '../css/bootstrap.min.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { CheckCircle, XCircle, XCircleFill } from 'react-bootstrap-icons';\r\n// import Button from 'react-bootstrap/Button'\r\n\r\nclass ViewReceivedSickRequests extends Component{\r\n    state={\r\n        requests:[]\r\n        ,warning:\"\"\r\n    }\r\n    componentDidMount(){\r\n    console.log(\"in maternity view\")\r\n        axios.get('http://localhost:5000/academic/receivedSickRequest',\r\n        {\r\n            headers:{\r\n                'x-auth-token':localStorage.getItem('jwtToken')\r\n            }\r\n        }\r\n        ).then(res=>{\r\n            // console.log(res.data[0].reqType)\r\n            this.setState({requests:res.data.arr,warning:res.data.warning})\r\n            console.log(\"new state= \"+this.state.requests.reqType)\r\n            console.log(\"new state= \"+this.state.warning)\r\n            console.log(\"new state= \"+this.state.requests)\r\n\r\n        }).catch(console.log(\"error\"))\r\n    }\r\n\r\n         handleClick(e,value){\r\n            e.preventDefault();\r\n            console.log(\"in click \"+value)\r\n            \r\n\r\n        }\r\n        handleCancel(e){\r\n            e.preventDefault();\r\n            axios.post('http://localhost:5000/academic/cancelRequest',\r\n            {\r\n                headers:{\r\n                    'x-auth-token':localStorage.getItem('jwtToken')\r\n                }\r\n            }\r\n            ).then(res=>{\r\n                // console.log(res.data[0].reqType)\r\n                // this.setState({requests:res.data.arr,warning:res.data.warning})\r\n                // console.log(\"new state= \"+this.state.requests.reqType)\r\n                // console.log(\"new state= \"+this.state.warning)\r\n                // console.log(\"new state= \"+this.state.requests)\r\n    \r\n            }).catch(\r\n                console.log(\"error\")\r\n                \r\n                )\r\n        }\r\n        \r\n        renderRequest=(request, index)=> {\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                \r\n               \r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.sickDay}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                {/* <Button variant=\"outline-success\" className=\"buttonResponse\">Accept</Button> */}\r\n               <a > <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></a>\r\n                {/* <Button variant=\"outline-danger\" className=\"buttonResponse3\">Cancel</Button> */}\r\n              </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            }    \r\n       \r\n    render(){\r\n        const reqs=this.state.requests;\r\n        var empty=[\"one\"]\r\n            const reqList=reqs.length?(\r\n            empty.map(request=>{\r\n            console.log(\"in mapping \"+request.reqType)\r\n            return(\r\n\r\n                <div className=\"containAll\">\r\n                \r\n            \r\n            \r\n            <div className=\"containDrop\">\r\n            <span className=\"maternityH\">Sick Leave Requests</span>\r\n                      <Dropdown as={ButtonGroup}className=\"buttons2\" >\r\n                <Dropdown.Toggle id=\"dropdown-custom-2\" className=\"pickBtn\">Request Type</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                    <Dropdown.Item active><Link to=\"/ViewSickRequests\">Sick Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item> <Link to=\"/ViewCompensationRequests\">Compensation Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewMaternityRequests\">Maternity Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewSlotLinkingRequests\">Slot Linking Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewReplacementRequests\">Replacement Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewChangeRequests\">Change Day-Off Requests</Link></Dropdown.Item>\r\n             \r\n             \r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n               \r\n              \r\n                </div>      \r\n\r\n                \r\n\r\n                <div className=\" containMaternityTable  \">\r\n                {/* <span id=\"spanSurrounder\"> */}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Documents</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>\r\n\r\n                \r\n                </div>\r\n                        \r\n            \r\n              )\r\n            })\r\n        ):\r\n        (\r\n        <div className=\"center\">No requests yet</div>\r\n        )\r\n\r\n        \r\n        return (\r\n            <div>\r\n           {reqList}\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewReceivedSickRequests","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewReceivedCompensationRequests.js",["244","245","246","247","248","249","250","251","252"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport '../css/test44.css'\r\n// import '../css/bootstrap.min.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { CheckCircle, XCircle, XCircleFill } from 'react-bootstrap-icons';\r\n// import Button from 'react-bootstrap/Button'\r\n\r\nclass ViewReceivedCompensationRequests extends Component{\r\n    state={\r\n        requests:[]\r\n        ,warning:\"\"\r\n    }\r\n    componentDidMount(){\r\n    console.log(\"in maternity view\")\r\n        axios.get('http://localhost:5000/academic/receivedCompensationRequest',\r\n        {\r\n            headers:{\r\n                'x-auth-token':localStorage.getItem('jwtToken')\r\n            }\r\n        }\r\n        ).then(res=>{\r\n            // console.log(res.data[0].reqType)\r\n            this.setState({requests:res.data.arr,warning:res.data.warning})\r\n            console.log(\"new state= \"+this.state.requests.reqType)\r\n            console.log(\"new state= \"+this.state.warning)\r\n            console.log(\"new state= \"+this.state.requests)\r\n\r\n        }).catch(console.log(\"error\"))\r\n    }\r\n\r\n         handleClick(e,value){\r\n            e.preventDefault();\r\n            console.log(\"in click \"+value)\r\n            \r\n\r\n        }\r\n        handleCancel(e){\r\n            e.preventDefault();\r\n            axios.post('http://localhost:5000/academic/cancelRequest',\r\n            {\r\n                headers:{\r\n                    'x-auth-token':localStorage.getItem('jwtToken')\r\n                }\r\n            }\r\n            ).then(res=>{\r\n                // console.log(res.data[0].reqType)\r\n                // this.setState({requests:res.data.arr,warning:res.data.warning})\r\n                // console.log(\"new state= \"+this.state.requests.reqType)\r\n                // console.log(\"new state= \"+this.state.warning)\r\n                // console.log(\"new state= \"+this.state.requests)\r\n    \r\n            }).catch(\r\n                console.log(\"error\")\r\n                \r\n                )\r\n        }\r\n        \r\n        renderRequest=(request, index)=> {\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                \r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                 <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.missedDay}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                {/* <Button variant=\"outline-success\" className=\"buttonResponse\">Accept</Button> */}\r\n               <a > <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></a>\r\n                {/* <Button variant=\"outline-danger\" className=\"buttonResponse3\">Cancel</Button> */}\r\n              </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            }    \r\n       \r\n    render(){\r\n        const reqs=this.state.requests;\r\n        var empty=[\"one\"]\r\n            const reqList=reqs.length?(\r\n            empty.map(request=>{\r\n            console.log(\"in mapping \"+request.reqType)\r\n            return(\r\n\r\n                <div className=\"containAll\">\r\n                \r\n            \r\n            \r\n            <div className=\"containDrop\">\r\n            <span className=\"maternityH\">Maternity Requests</span>\r\n                      <Dropdown as={ButtonGroup}className=\"buttons2\" >\r\n                <Dropdown.Toggle id=\"dropdown-custom-2\" className=\"pickBtn\">Request Type</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                    <Dropdown.Item ><Link to=\"/ViewSickRequests\">Sick Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item active> <Link to=\"/ViewCompensationRequests\">Compensation Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewMaternityRequests\">Maternity Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewSlotLinkingRequests\">Slot Linking Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewReplacementRequests\">Replacement Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewChangeRequests\">Change Day-Off Requests</Link></Dropdown.Item>\r\n             \r\n             \r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n               \r\n              \r\n                </div>      \r\n\r\n                \r\n\r\n                <div className=\" containMaternityTable  \">\r\n                {/* <span id=\"spanSurrounder\"> */}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                    <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Missed Day</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>\r\n\r\n                \r\n                </div>\r\n                        \r\n            \r\n              )\r\n            })\r\n        ):\r\n        (\r\n        <div className=\"center\">No requests yet</div>\r\n        )\r\n\r\n        \r\n        return (\r\n            <div>\r\n           {reqList}\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewReceivedCompensationRequests","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewReceivedSlotLinkingRequests.js",["253","254","255","256","257","258","259","260","261"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n// import '../css/test44.css'\r\nimport '../css/SlotReq.css'\r\n// import '../css/bootstrap.min.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { CheckCircle, XCircle, XCircleFill } from 'react-bootstrap-icons';\r\n// import Button from 'react-bootstrap/Button'\r\n\r\nclass ViewReceivedSlotLinkingRequests extends Component{\r\n    state={\r\n        requests:[]\r\n        ,warning:\"\"\r\n    }\r\n    componentDidMount(){\r\n    console.log(\"in maternity view\")\r\n        axios.get('http://localhost:5000/academic/receivedSlotLinkingRequest',\r\n        {\r\n            headers:{\r\n                'x-auth-token':localStorage.getItem('jwtToken')\r\n            }\r\n        }\r\n        ).then(res=>{\r\n            // console.log(res.data[0].reqType)\r\n            this.setState({requests:res.data.arr,warning:res.data.warning})\r\n            console.log(\"new state= \"+this.state.requests.reqType)\r\n            console.log(\"new state= \"+this.state.warning)\r\n            console.log(\"new state= \"+this.state.requests)\r\n\r\n        }).catch(console.log(\"error\"))\r\n    }\r\n\r\n         handleClick(e,value){\r\n            e.preventDefault();\r\n            console.log(\"in click \"+value)\r\n            \r\n\r\n        }\r\n        handleCancel(e){\r\n            e.preventDefault();\r\n            axios.post('http://localhost:5000/academic/cancelRequest',\r\n            {\r\n                headers:{\r\n                    'x-auth-token':localStorage.getItem('jwtToken')\r\n                }\r\n            }\r\n            ).then(res=>{\r\n                // console.log(res.data[0].reqType)\r\n                // this.setState({requests:res.data.arr,warning:res.data.warning})\r\n                // console.log(\"new state= \"+this.state.requests.reqType)\r\n                // console.log(\"new state= \"+this.state.warning)\r\n                // console.log(\"new state= \"+this.state.requests)\r\n    \r\n            }).catch(\r\n                console.log(\"error\")\r\n                \r\n                )\r\n        }\r\n        \r\n        renderRequest=(request, index)=> {\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                \r\n               \r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.slotDay}</td>\r\n                <td className=\"reqTd\">{request.slotNum}</td>\r\n                <td className=\"reqTd\">{request.courseID}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                {/* <Button variant=\"outline-success\" className=\"buttonResponse\">Accept</Button> */}\r\n               <a > <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></a>\r\n                {/* <Button variant=\"outline-danger\" className=\"buttonResponse3\">Cancel</Button> */}\r\n              </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            }    \r\n       \r\n    render(){\r\n        const reqs=this.state.requests;\r\n        var empty=[\"one\"]\r\n            const reqList=reqs.length?(\r\n            empty.map(request=>{\r\n            console.log(\"in mapping \"+request.reqType)\r\n            return(\r\n\r\n                <div className=\"containAll\">\r\n                \r\n            \r\n            \r\n            <div className=\"containDrop\">\r\n            <span className=\"maternityH\">Slot Linking Requests</span>\r\n                      <Dropdown as={ButtonGroup}className=\"buttons2\" >\r\n                <Dropdown.Toggle id=\"dropdown-custom-2\" className=\"pickBtn\">Request Type</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                    <Dropdown.Item ><Link to=\"/ViewSickRequests\">Sick Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item> <Link to=\"/ViewCompensationRequests\">Compensation Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewMaternityRequests\">Maternity Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item active><Link to=\"/ViewSlotLinkingRequests\">Slot Linking Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewReplacementRequests\">Replacement Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewChangeRequests\">Change Day-Off Requests</Link></Dropdown.Item>\r\n             \r\n             \r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n               \r\n              \r\n                </div>      \r\n\r\n                \r\n\r\n                <div className=\" containMaternityTable  \">\r\n                {/* <span id=\"spanSurrounder\"> */}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Slot Day</th>\r\n                    <th className=\"reqTh\">Slot Number</th>\r\n                    <th className=\"reqTh\">Course ID</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>\r\n\r\n                \r\n                </div>\r\n                        \r\n            \r\n              )\r\n            })\r\n        ):\r\n        (\r\n        <div className=\"center\">No requests yet</div>\r\n        )\r\n\r\n        \r\n        return (\r\n            <div>\r\n           {reqList}\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewReceivedSlotLinkingRequests","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewReceivedMaternityRequests.js",["262","263","264","265","266","267","268","269","270"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport '../css/test44.css'\r\n// import '../css/bootstrap.min.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { CheckCircle, XCircle, XCircleFill } from 'react-bootstrap-icons';\r\n// import Button from 'react-bootstrap/Button'\r\n\r\nclass ViewReceivedMaternityRequests extends Component{\r\n    state={\r\n        requests:[]\r\n        ,warning:\"\"\r\n    }\r\n    componentDidMount(){\r\n    console.log(\"in maternity view\")\r\n        axios.get('http://localhost:5000/academic/receivedMaternityRequest',\r\n        {\r\n            headers:{\r\n                'x-auth-token':localStorage.getItem('jwtToken')\r\n            }\r\n        }\r\n        ).then(res=>{\r\n            // console.log(res.data[0].reqType)\r\n            this.setState({requests:res.data.arr,warning:res.data.warning})\r\n            console.log(\"new state= \"+this.state.requests.reqType)\r\n            console.log(\"new state= \"+this.state.warning)\r\n            console.log(\"new state= \"+this.state.requests)\r\n\r\n        }).catch(console.log(\"error\"))\r\n    }\r\n\r\n         handleClick(e,value){\r\n            e.preventDefault();\r\n            console.log(\"in click \"+value)\r\n            \r\n\r\n        }\r\n        handleCancel(e){\r\n            e.preventDefault();\r\n            axios.post('http://localhost:5000/academic/cancelRequest',\r\n            {\r\n                headers:{\r\n                    'x-auth-token':localStorage.getItem('jwtToken')\r\n                }\r\n            }\r\n            ).then(res=>{\r\n                // console.log(res.data[0].reqType)\r\n                // this.setState({requests:res.data.arr,warning:res.data.warning})\r\n                // console.log(\"new state= \"+this.state.requests.reqType)\r\n                // console.log(\"new state= \"+this.state.warning)\r\n                // console.log(\"new state= \"+this.state.requests)\r\n    \r\n            }).catch(\r\n                console.log(\"error\")\r\n                \r\n                )\r\n        }\r\n        \r\n        renderRequest=(request, index)=> {\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                {/* <td className=\"reqTd\" >{request.counter}</td> */}\r\n                {/* <td className=\"reqTd\" >{request.requestID}</td> */}\r\n                {/* <td className=\"reqTd\" >{request.reqType}</td> */}\r\n                {/* <td className=\"reqTd\">{request.sentBy}</td> */}\r\n                {/* <td className=\"reqTd\">{request.sentTo}</td> */}\r\n                     \r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.maternityDoc}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                {/* <Button variant=\"outline-success\" className=\"buttonResponse\">Accept</Button> */}\r\n               <a > <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></a>\r\n                {/* <Button variant=\"outline-danger\" className=\"buttonResponse3\">Cancel</Button> */}\r\n              </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            }    \r\n       \r\n    render(){\r\n        const reqs=this.state.requests;\r\n        var empty=[\"one\"]\r\n            const reqList=reqs.length?(\r\n            empty.map(request=>{\r\n            console.log(\"in mapping \"+request.reqType)\r\n            return(\r\n\r\n                <div className=\"containAll\">\r\n                \r\n            \r\n            \r\n            <div className=\"containDrop\">\r\n            <span className=\"maternityH\">Maternity Requests</span>\r\n                      <Dropdown as={ButtonGroup}className=\"buttons2\" >\r\n                <Dropdown.Toggle id=\"dropdown-custom-2\" className=\"pickBtn\">Request Type</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                    <Dropdown.Item ><Link to=\"/ViewSickRequests\">Sick Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item> <Link to=\"/ViewCompensationRequests\">Compensation Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item active><Link to=\"/ViewMaternityRequests\">Maternity Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewSlotLinkingRequests\">Slot Linking Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewReplacementRequests\">Replacement Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewChangeRequests\">Change Day-Off Requests</Link></Dropdown.Item>\r\n             \r\n             \r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n               \r\n              \r\n                </div>      \r\n\r\n                \r\n\r\n                <div className=\" containMaternityTable  \">\r\n                {/* <span id=\"spanSurrounder\"> */}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                    <tr className=\"reqTr\">\r\n                    {/* <th className=\"reqTh\">#</th> */}\r\n                    {/* <th className=\"reqTh\">Request ID</th> */}\r\n                    {/* <th className=\"reqTh\">Request Type</th> */}\r\n                    {/* <th className=\"reqTh\">Sender</th> */}\r\n                    {/* <th className=\"reqTh\">Receiver</th> */}\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Documents</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>\r\n\r\n                \r\n                </div>\r\n                        \r\n            \r\n              )\r\n            })\r\n        ):\r\n        (\r\n        <div className=\"center\">No requests yet</div>\r\n        )\r\n\r\n        \r\n        return (\r\n            <div>\r\n           {reqList}\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewReceivedMaternityRequests","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\ViewReceivedChangeRequests.js",["271","272","273","274","275","276","277","278","279"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport '../css/test44.css'\r\n// import '../css/bootstrap.min.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { CheckCircle, XCircle, XCircleFill } from 'react-bootstrap-icons';\r\n// import Button from 'react-bootstrap/Button'\r\n\r\nclass ViewReceivedChangeRequests extends Component{\r\n    state={\r\n        requests:[]\r\n        ,warning:\"\"\r\n    }\r\n    componentDidMount(){\r\n    console.log(\"in maternity view\")\r\n        axios.get('http://localhost:5000/academic/receivedChangeDayOffRequest',\r\n        {\r\n            headers:{\r\n                'x-auth-token':localStorage.getItem('jwtToken')\r\n            }\r\n        }\r\n        ).then(res=>{\r\n            // console.log(res.data[0].reqType)\r\n            this.setState({requests:res.data.arr,warning:res.data.warning})\r\n            console.log(\"new state= \"+this.state.requests.reqType)\r\n            console.log(\"new state= \"+this.state.warning)\r\n            console.log(\"new state= \"+this.state.requests)\r\n\r\n        }).catch(console.log(\"error\"))\r\n    }\r\n\r\n         handleClick(e,value){\r\n            e.preventDefault();\r\n            console.log(\"in click \"+value)\r\n            \r\n\r\n        }\r\n        handleCancel(e){\r\n            e.preventDefault();\r\n            axios.post('http://localhost:5000/academic/cancelRequest',\r\n            {\r\n                headers:{\r\n                    'x-auth-token':localStorage.getItem('jwtToken')\r\n                }\r\n            }\r\n            ).then(res=>{\r\n                // console.log(res.data[0].reqType)\r\n                // this.setState({requests:res.data.arr,warning:res.data.warning})\r\n                // console.log(\"new state= \"+this.state.requests.reqType)\r\n                // console.log(\"new state= \"+this.state.warning)\r\n                // console.log(\"new state= \"+this.state.requests)\r\n    \r\n            }).catch(\r\n                console.log(\"error\")\r\n                \r\n                )\r\n        }\r\n        \r\n        renderRequest=(request, index)=> {\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                \r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTdSick\">{request.newDayOff}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                {/* <Button variant=\"outline-success\" className=\"buttonResponse\">Accept</Button> */}\r\n               <a > <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></a>\r\n                {/* <Button variant=\"outline-danger\" className=\"buttonResponse3\">Cancel</Button> */}\r\n              </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            }    \r\n       \r\n    render(){\r\n        const reqs=this.state.requests;\r\n        var empty=[\"one\"]\r\n            const reqList=reqs.length?(\r\n            empty.map(request=>{\r\n            console.log(\"in mapping \"+request.reqType)\r\n            return(\r\n\r\n                <div className=\"containAll\">\r\n                \r\n            \r\n            \r\n            <div className=\"containDrop\">\r\n            <span className=\"maternityH\">Change Day-Off Requests</span>\r\n                      <Dropdown as={ButtonGroup}className=\"buttons2\" >\r\n                <Dropdown.Toggle id=\"dropdown-custom-2\" className=\"pickBtn\">Request Type</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                    <Dropdown.Item ><Link to=\"/ViewSickRequests\">Sick Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item > <Link to=\"/ViewCompensationRequests\">Compensation Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewMaternityRequests\">Maternity Leave Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewSlotLinkingRequests\">Slot Linking Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item ><Link to=\"/ViewReplacementRequests\">Replacement Requests</Link></Dropdown.Item>\r\n                    <Dropdown.Item active><Link to=\"/ViewChangeRequests\">Change Day-Off Requests</Link></Dropdown.Item>\r\n             \r\n             \r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                    \r\n               \r\n              \r\n                </div>      \r\n\r\n                \r\n\r\n                <div className=\" containMaternityTable  \">\r\n                {/* <span id=\"spanSurrounder\"> */}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">New Day-Off</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>\r\n\r\n                \r\n                </div>\r\n                        \r\n            \r\n              )\r\n            })\r\n        ):\r\n        (\r\n        <div className=\"center\">No requests yet</div>\r\n        )\r\n\r\n        \r\n        return (\r\n            <div>\r\n           {reqList}\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewReceivedChangeRequests","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\submittedRequests.js",["280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport '../css/test44.css'\r\n// import '../css/bootstrap.min.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { CheckCircle, XCircle, XCircleFill } from 'react-bootstrap-icons';\r\n// import Button from 'react-bootstrap/Button'\r\n\r\nclass ViewSubmittedRequests extends Component{\r\n    \r\n    state={\r\n        unFilteredRequests:[],\r\n        requests:[],\r\n        stateRequests:[],\r\n        stateBool:false\r\n        ,warning:\"\",\r\n        cancelWarning:\"\",\r\n        cancelSuccess:\"\",\r\n        reqState:\"\",\r\n        reqType:\"\",\r\n        reqTitle:\"\"\r\n    }\r\n    componentDidMount(props){\r\n    console.log(\"in maternity view \"+localStorage.getItem('jwtToken'))\r\n        axios.get('http://localhost:5000/academic/submittedRequest',\r\n        {\r\n            headers:{\r\n                'x-auth-token':localStorage.getItem('jwtToken')\r\n            }\r\n        }\r\n        ).then(res=>{\r\n             console.log(\"this.state.reqType= \"+this.props.location.state.reqType)\r\n             const temp=this.props.location.state.reqType;\r\n             const tempTitle=this.props.location.state.reqTitle;\r\n             this.setState({reqType:temp,reqTitle:tempTitle});\r\n             \r\n            const maternity=res.data.arr.filter(request=>{\r\n                return request.reqType==this.state.reqType;\r\n            })\r\n            console.log(\"curr req= \"+maternity)\r\n            this.setState({unFilteredRequests:res.data.arr,\r\n                warning:res.data.warning,stateBool:false\r\n            ,reqType:this.state.reqType,reqTitle:this.state.reqTitle,requests:maternity})\r\n\r\n            console.log(\"new state= \"+this.state.requests.reqType)\r\n            console.log(\"new state= \"+this.state.warning)\r\n            console.log(\"new state= \"+this.state.requests)\r\n            var reqs=this.state.requests\r\n\r\n        }).catch(console.log(\"error\"))\r\n    }\r\n        handleClick(e,value){\r\n            e.preventDefault();\r\n            console.log(\"in cancel btn clicked\")\r\n            console.log(\"token \"+localStorage.getItem('jwtToken'))\r\n          \r\n            axios.request({\r\n                method: 'POST',\r\n                url: 'http://localhost:5000/academic/cancelRequest',\r\n                headers: {\r\n                    'x-auth-token':localStorage.getItem('jwtToken')\r\n                },\r\n                data: {\r\n                    requestID: value\r\n                },\r\n              \r\n              }).then(res=>{\r\n                console.log(\"successfull\");\r\n                const location = {\r\n                    pathname: '/submittedRequests',\r\n                    state: { reqType: this.state.reqType,reqTitle: this.state.reqTitle}\r\n                  }\r\n                  \r\n                //   <Link to={location}/>\r\n                //   <Redirect to={location}/>\r\n                 history.push(location)\r\n                //   history.replace(location)\r\n                window.location.reload();\r\n                // console.log('state= '+this.state.reqType+\" title= \"+this.state.reqTitle)\r\n                // if(true){\r\n                //     console.log(\"true\")\r\n                // return(<Redirect to={{pathname: \"/submittedRequests\",state: { reqType: this.state.reqType,reqTitle:this.state.reqTitle }}}/>)\r\n                // }\r\n                // this.setState({cancelSuccess:res.data});\r\n    \r\n            }).catch(error=>{\r\n                console.log(\"cancel error= \"+error.response.data)\r\n                this.setState({cancelWarning:error.response.data});\r\n                })\r\n        }\r\n        handleStateClick(e,value){\r\n            e.preventDefault();\r\n            if(value==\"All\"){\r\n               return this.setState({stateBool:false,reqState:\"All\",cancelWarning:\"\"})\r\n                console.log(\"all= \"+this.state.requests)\r\n            }\r\n            if(this.state.requests.length>0){\r\n               const accept=this.state.requests.filter(request=>{\r\n                   return request.state==value\r\n               })\r\n               console.log(\"accept= \"+accept)\r\n                this.setState({stateRequests:accept,stateBool:true,reqState:value,cancelWarning:\"\"})\r\n                // var reqs=this.state.stateRequests\r\n            }\r\n\r\n        }\r\n        handleTypeClick(e,value){\r\n            e.preventDefault();\r\n            // if(value==\"Maternity\"){\r\n            //    return this.setState({reqType:\"Maternity\"})\r\n            //     console.log(\"all= \"+this.state.requests)\r\n            // }\r\n            if(this.state.unFilteredRequests.length>0){\r\n               const type=this.state.unFilteredRequests.filter(request=>{\r\n                   return request.reqType==value\r\n               })\r\n               console.log(\"type= \"+type)\r\n               var typeTitle=\"\";\r\n               if(value==\"Sick Leave\")\r\n               typeTitle=\"Sick Leave Requests\"\r\n\r\n               if(value==\"Maternity Leave\")\r\n               typeTitle=\"Maternity Leave Requests\"\r\n\r\n               if(value==\"Accidental Leave\")\r\n               typeTitle=\"Accidental Leave Requests\"\r\n\r\n               if(value==\"Annual Leave\")\r\n               typeTitle=\"Annual Leave Requests\"\r\n\r\n               if(value==\"Slot Linking\")\r\n               typeTitle=\"Slot Linking Requests\"\r\n\r\n               if(value==\"Change Day off\")\r\n               typeTitle=\"Change Day Off Requests\"\r\n\r\n               if(value==\"Replacement\")\r\n               typeTitle=\"Replacement Requests\"\r\n\r\n               if(value==\"Compensation Leave\")\r\n               typeTitle=\"Compensation Requests\"\r\n\r\n\r\n                this.setState({reqType:value,reqTitle:typeTitle,requests:type,reqState:\"All\",cancelWarning:\"\"})\r\n               console.log(\"this.state.reqType alooooooo\"+this.state.reqType)\r\n                const location = {\r\n                    pathname: '/submittedRequests',\r\n                    state: { reqType: value,reqTitle: typeTitle}\r\n                  }\r\n                history.push(location)\r\n                // var reqs=this.state.stateRequests\r\n            }\r\n\r\n\r\n        }\r\n        renderMaternityRequest=(request, index)=> {\r\n            console.log(\"submissiondate= \"+request.submission_date+\r\n            \"\\n\"+\"maternityDoc= \"+request.maternityDoc+\r\n            \"\\n\"+\"reason= \"+request.reason+\r\n            \"\\n\"+\"state= \"+request.state)\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\">\r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.maternityDoc}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n\r\n                <td className=\"reqTd\">\r\n               <Button  size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n               <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></Button>\r\n                </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            }    \r\n            renderSickRequest=(request, index)=> {\r\n                console.log(\"submissiondate= \"+request.submission_date+\r\n                \"\\n\"+\"sickDay= \"+request.sickDay+\r\n                \"\\n\"+\"reason= \"+request.reason+\r\n                \"\\n\"+\"state= \"+request.state)\r\n                return (\r\n                    \r\n                    <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                    <td className=\"reqTd\" >{request.counter}</td>\r\n                    <td className=\"reqTd\">{request.submission_date}</td>\r\n                    <td className=\"reqTd\">{request.sickDay}</td>\r\n                    <td className=\"reqTd\">{request.reason}</td>\r\n                    <td className=\"reqTd\">{request.state}</td>\r\n                    <td className=\"reqTd\">\r\n                    <Button  size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n               <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></Button>\r\n                  </td>\r\n    \r\n                    </tr>\r\n                    \r\n                )\r\n                }\r\n                renderReplacementRequest=(request, index)=> {\r\n                    console.log(\"submissiondate= \"+request.submission_date+\r\n                    \"\\n\"+\"slotDate= \"+request.slotDate+\r\n                    \"\\n\"+\"slotNum= \"+request.slotNum+\r\n                    \"\\n\"+\"slotLoc= \"+request.slotLoc+\r\n                    \"\\n\"+\"reason= \"+request.reason+\r\n                    \"\\n\"+\"state= \"+request.state)\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                \r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.slotDate}</td>\r\n                <td className=\"reqTd\">{request.slotNum}</td>\r\n                <td className=\"reqTd\">{request.slotLoc}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                <Button  size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n               <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></Button>\r\n              </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            } \r\n            renderCompensationRequest=(request, index)=> {\r\n                console.log(\"submissiondate= \"+request.submission_date+\r\n                    \"\\n\"+\"missedDAY= \"+request.missedDay+\r\n                    \"\\n\"+\"reason= \"+request.reason+\r\n                    \"\\n\"+\"state= \"+request.state)\r\n                return (\r\n                    \r\n                    <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                    \r\n                    <td className=\"reqTd\" >{request.counter}</td>\r\n                     <td className=\"reqTd\">{request.submission_date}</td>\r\n                    <td className=\"reqTd\">{request.missedDay}</td>\r\n                    <td className=\"reqTd\">{request.reason}</td>\r\n                    <td className=\"reqTd\">{request.state}</td>\r\n                    <td className=\"reqTd\">\r\n                    <Button  size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n               <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></Button>\r\n                  </td>\r\n    \r\n                    </tr>\r\n                    \r\n                )\r\n                } \r\n                \r\n        renderChangeDayOffRequest=(request, index)=> {\r\n            console.log(\"submissiondate= \"+request.submission_date+\r\n                \"\\n\"+\"missedDAY= \"+request.missedDay+\r\n                \"\\n\"+\"reason= \"+request.reason+\r\n                \"\\n\"+\"state= \"+request.state)\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                \r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTdSick\">{request.newDayOff}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                <Button  size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n               <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></Button>\r\n                </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            }\r\n        renderSlotLinkingRequest=(request, index)=> {\r\n            console.log(\"submissiondate= \"+request.submission_date+\r\n                \"\\n\"+\"missedDAY= \"+request.missedDay+\r\n                \"\\n\"+\"reason= \"+request.reason+\r\n                \"\\n\"+\"state= \"+request.state)\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.slotDay}</td>\r\n                <td className=\"reqTd\">{request.slotNum}</td>\r\n                <td className=\"reqTd\">{request.courseID}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                <Button  size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n               <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></Button>\r\n                </td>\r\n                </tr>\r\n                \r\n            )\r\n            }\r\n            renderAccidentalRequest=(request, index)=> {\r\n                console.log(\"submissiondate= \"+request.submission_date+\r\n                    \"\\n\"+\"missedDAY= \"+request.missedDay+\r\n                    \"\\n\"+\"reason= \"+request.reason+\r\n                    \"\\n\"+\"state= \"+request.state)\r\n                return (\r\n                    \r\n                    <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                    <td className=\"reqTd\" >{request.counter}</td>\r\n                    <td className=\"reqTd\">{request.submission_date}</td>\r\n                    <td className=\"reqTd\">{request.accidentDay}</td>\r\n                    <td className=\"reqTd\">{request.reason}</td>\r\n                    <td className=\"reqTd\">{request.state}</td>\r\n                    <td className=\"reqTd\">\r\n                    <Button  size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n               <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></Button>\r\n                    </td>\r\n                    </tr>\r\n                    \r\n                )\r\n                }\r\n                renderAnnualRequest=(request, index)=> {\r\n            console.log(\"submissiondate= \"+request.submission_date+\r\n                \"\\n\"+\"missedDAY= \"+request.missedDay+\r\n                \"\\n\"+\"reason= \"+request.reason+\r\n                \"\\n\"+\"state= \"+request.state)\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.slotNum}</td>\r\n                <td className=\"reqTd\">{request.slotDate}</td>\r\n                <td className=\"reqTd\">{request.replacementStaff}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                <Button  size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n               <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></Button>\r\n                </td>\r\n                </tr>\r\n                \r\n            )\r\n            }              \r\n                        \r\n                \r\n    render(){\r\n        var reqs=[];\r\n        if(!this.state.stateBool){\r\n            console.log(\"here\")\r\n         reqs=this.state.requests;\r\n        }\r\n        else if(this.state.stateBool){\r\n            console.log(\"other\")\r\n         reqs=this.state.stateRequests;\r\n        }\r\n        var empty=[\"one\"]\r\n            const reqList=reqs.length?(\r\n            empty.map(request=>{\r\n            console.log(\"in mapping \"+request.reqType)\r\n            return(\r\n\r\n                <div className=\"containAll\">\r\n                \r\n            \r\n            \r\n            <div className=\"containDrop\">\r\n            <span className=\"maternityH\">{this.state.reqTitle}</span>\r\n                      <Dropdown as={ButtonGroup} className=\"buttons2\" >\r\n                <Dropdown.Toggle id=\"dropdown-custom-2\" className=\"pickBtn\">Request Type</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                    {this.state.reqType!=\"Maternity Leave\" &&  <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Maternity Leave\")}>Materity</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Maternity Leave\" &&  <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Maternity Leave\")}>Materity</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Sick Leave\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Sick Leave\")}>Sick</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Sick Leave\" && <Dropdown.Item  active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Sick Leave\")}>Sick</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Replacement\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Replacement\")}>Replacement</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Replacement\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Replacement\")}>Replacement</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Compensation Leave\"  &&<Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Compensation Leave\")}>Compensation</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Compensation Leave\"  &&<Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Compensation Leave\")}>Compensation</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Accidental Leave\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Accidental Leave\")}>Accidental Leave</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Accidental Leave\" &&<Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Accidental Leave\")}>Accidental Leave</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Annual Leave\" &&  <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Annual Leave\")}>Annual Leave</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Annual Leave\" &&  <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Annual Leave\")}>Annual Leave</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Change Day Off\" &&<Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Change Day off\")}>Change Day Off</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Change Day Off\" &&<Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Change Day off\")}>Change Day Off</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Slot Linking\" &&  <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Slot Linking\")}>Slot Linking</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Slot Linking\" &&  <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Slot Linking\")}>Slot Linking</Button></Dropdown.Item >}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>{' '} \r\n\r\n                    <Dropdown as={ButtonGroup} className=\"buttons1\">\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\" className=\"pickBtn\" >State</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"drop1\">\r\n                    {/* <Dropdown.Item ><Link to=\"/ViewAcceptedMaternityRequests\">Accepted</Link></Dropdown.Item> */}\r\n             \r\n                  \r\n                    {this.state.reqState!=\"All\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"All\")}>All</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"All\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"All\")}>All</Button></Dropdown.Item >}\r\n                    {this.state.reqState!=\"Accepted\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Accepted\")}>Accepted</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"Accepted\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Accepted\")}>Accepted</Button></Dropdown.Item >} \r\n                    {this.state.reqState!=\"Rejected\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Rejected\")}>Rejected</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"Rejected\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Rejected\")}>Rejected</Button></Dropdown.Item >}\r\n                    {this.state.reqState!=\"Pending\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Pending\")}>Pending</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"Pending\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Pending\")}>Pending</Button></Dropdown.Item >}\r\n                    \r\n                    \r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n               \r\n              \r\n                </div>      \r\n\r\n                \r\n\r\n             {this.state.reqType==\"Maternity Leave\" &&  \r\n              <div className=\" containMaternityTable\">\r\n\r\n                {this.state.cancelWarning!=\"\" && <h5 class=\"cancelWarning\">{this.state.cancelWarning}</h5>}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                    <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Documents</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderMaternityRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>\r\n                }\r\n\r\n\r\n                {this.state.reqType==\"Sick Leave\" &&  \r\n              <div className=\" containMaternityTable\">\r\n\r\n                {this.state.cancelWarning!=\"\" && <h5 class=\"cancelWarning\">{this.state.cancelWarning}</h5>}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Sick Day</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderSickRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>\r\n                }\r\n\r\n                {this.state.reqType==\"Replacement\" &&\r\n                <div className=\" containMaternityTable  \">\r\n                {this.state.cancelWarning!=\"\" && <h5 class=\"cancelWarning\">{this.state.cancelWarning}</h5>}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                    <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Slot Date</th>\r\n                    <th className=\"reqTh\">Slot Number</th>\r\n                    <th className=\"reqTh\">Slot Location</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderReplacementRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div> \r\n                }\r\n\r\n                {this.state.reqType==\"Compensation Leave\" &&\r\n                <div className=\" containMaternityTable  \">\r\n                {this.state.cancelWarning!=\"\" && <h5 class=\"cancelWarning\">{this.state.cancelWarning}</h5>}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Missed Day</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderCompensationRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div> }\r\n\r\n                {this.state.reqType==\"Change Day off\" &&\r\n                <div className=\" containMaternityTable \">\r\n                {this.state.cancelWarning!=\"\" && <h5 class=\"cancelWarning\">{this.state.cancelWarning}</h5>}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">New Day-Off</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderChangeDayOffRequest)}\r\n                </tbody>\r\n                </Table>\r\n                </div>}\r\n\r\n                {this.state.reqType==\"Slot Linking\" &&<div className=\" containMaternityTable  \">\r\n                {this.state.cancelWarning!=\"\" && <h5 class=\"cancelWarning\">{this.state.cancelWarning}</h5>}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                    <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Slot Day</th>\r\n                    <th className=\"reqTh\">Slot Number</th>\r\n                    <th className=\"reqTh\">Course ID</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderSlotLinkingRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>}\r\n\r\n                {this.state.reqType==\"Accidental Leave\" && <div className=\" containMaternityTable  \">\r\n                {this.state.cancelWarning!=\"\" && <h5 class=\"cancelWarning\">{this.state.cancelWarning}</h5>}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                    <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Accident Date</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderAccidentalRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>}\r\n\r\n                {this.state.reqType==\"Annual\"&&\r\n                /* ,slotNum:sent[i].slotNum,slotDate:sent[i].slotDate,\r\n                    slotLoc:sent[i].slotLoc, replacementStaff:repl, */\r\n                <div className=\" containMaternityTable\">\r\n                {this.state.cancelWarning!=\"\" && <h5 class=\"cancelWarning\">{this.state.cancelWarning}</h5>}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                    <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Slot Number</th>\r\n                    <th className=\"reqTh\">Slot Date</th>\r\n                    <th className=\"reqTh\">Replacement Staff</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderAnnualRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>}\r\n                    \r\n                    \r\n                    \r\n                    \r\n                    \r\n                    \r\n\r\n\r\n                </div>\r\n                        \r\n            \r\n              )\r\n            })\r\n        )\r\n        \r\n        :\r\n        (\r\n        <div className=\"center\">\r\n        {/* <h3>{this.state.reqTitle}</h3> */}\r\n       {/* <h4> No requests yet</h4> */}\r\n\r\n       <div className=\"containDrop c2\">\r\n            <span className=\"noReq\"><h3>{this.state.reqTitle}</h3></span>\r\n                      <Dropdown as={ButtonGroup} className=\"buttons2\" >\r\n                <Dropdown.Toggle id=\"dropdown-custom-2\" className=\"pickBtn\">Request Type</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n             \r\n                    {this.state.reqType!=\"Accidental Leave\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Accidental Leave\")}>Accidental Leave</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Accidental Leave\" &&<Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Accidental Leave\")}>Accidental Leave</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Annual Leave\" &&  <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Annual Leave\")}>Annual Leave</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Annual Leave\" &&  <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Annual Leave\")}>Annual Leave</Button></Dropdown.Item >}\r\n\r\n\r\n                    {this.state.reqType!=\"Change Day Off\" &&<Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Change Day off\")}>Change Day Off</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Change Day Off\" &&<Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Change Day off\")}>Change Day Off</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Compensation Leave\"  &&<Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Compensation Leave\")}>Compensation</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Compensation Leave\"  &&<Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Compensation Leave\")}>Compensation</Button></Dropdown.Item >}\r\n\r\n\r\n                    {this.state.reqType!=\"Maternity Leave\" &&  <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Maternity Leave\")}>Materity</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Maternity Leave\" &&  <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Maternity Leave\")}>Materity</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Replacement\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Replacement\")}>Replacement</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Replacement\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Replacement\")}>Replacement</Button></Dropdown.Item >}\r\n                    \r\n                    {this.state.reqType!=\"Sick Leave\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Sick Leave\")}>Sick</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Sick Leave\" && <Dropdown.Item  active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Sick Leave\")}>Sick</Button></Dropdown.Item >}\r\n                   \r\n                    {this.state.reqType!=\"Slot Linking\" &&  <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Slot Linking\")}>Slot Linking</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Slot Linking\" &&  <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Slot Linking\")}>Slot Linking</Button></Dropdown.Item >}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>{' '} \r\n\r\n                    <Dropdown as={ButtonGroup} className=\"buttons1\">\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\" className=\"pickBtn\" >State</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"drop1\">\r\n                    {/* <Dropdown.Item ><Link to=\"/ViewAcceptedMaternityRequests\">Accepted</Link></Dropdown.Item> */}\r\n             \r\n                  \r\n                    {this.state.reqState!=\"All\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"All\")}>All</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"All\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"All\")}>All</Button></Dropdown.Item >}\r\n                    {this.state.reqState!=\"Accepted\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Accepted\")}>Accepted</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"Accepted\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Accepted\")}>Accepted</Button></Dropdown.Item >} \r\n                    {this.state.reqState!=\"Rejected\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Rejected\")}>Rejected</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"Rejected\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Rejected\")}>Rejected</Button></Dropdown.Item >}\r\n                    {this.state.reqState!=\"Pending\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Pending\")}>Pending</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"Pending\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Pending\")}>Pending</Button></Dropdown.Item >}\r\n                    \r\n                    \r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n               \r\n              \r\n                </div>    \r\n                <div class=\"alert alert-primary\" role=\"alert\" >\r\n                No requests yet!\r\n                </div>  \r\n\r\n        </div>\r\n        )\r\n\r\n        \r\n        return (\r\n            <div>\r\n           {reqList}\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewSubmittedRequests","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\receivedRequests.js",["397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport '../css/test44.css'\r\n// import '../css/bootstrap.min.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { CheckCircle, CheckCircleFill,XCircle, XCircleFill } from 'react-bootstrap-icons';\r\n// import Button from 'react-bootstrap/Button'\r\n\r\nclass ViewReceivedRequests extends Component{\r\n    \r\n    state={\r\n        unFilteredRequests:[],\r\n        requests:[],\r\n        stateRequests:[],\r\n        stateBool:false\r\n        ,warning:\"\",\r\n        cancelWarning:\"\",\r\n        cancelSuccess:\"\",\r\n        reqState:\"\",\r\n        reqType:\"\",\r\n        reqTitle:\"\"\r\n    }\r\n    componentDidMount(props){\r\n    console.log(\"in maternity view \"+localStorage.getItem('jwtToken'))\r\n        axios.get('http://localhost:5000/academic/receivedRequest',\r\n        {\r\n            headers:{\r\n                'x-auth-token':localStorage.getItem('jwtToken')\r\n            }\r\n        }\r\n        ).then(res=>{\r\n             console.log(\"this.state.reqType= \"+this.props.location.state.reqType)\r\n             const temp=this.props.location.state.reqType;\r\n             const tempTitle=this.props.location.state.reqTitle;\r\n             this.setState({reqType:temp,reqTitle:tempTitle});\r\n             \r\n            const maternity=res.data.arr.filter(request=>{\r\n                return request.reqType==this.state.reqType;\r\n            })\r\n            console.log(\"curr req= \"+maternity)\r\n            this.setState({unFilteredRequests:res.data.arr,\r\n                warning:res.data.warning,stateBool:false\r\n            ,reqType:this.state.reqType,reqTitle:this.state.reqTitle,requests:maternity})\r\n\r\n            console.log(\"new state= \"+this.state.requests.reqType)\r\n            console.log(\"new state= \"+this.state.warning)\r\n            console.log(\"new state= \"+this.state.requests)\r\n            var reqs=this.state.requests\r\n\r\n        }).catch(console.log(\"error\"))\r\n    }\r\n        handleAcceptClick(e,value){\r\n            e.preventDefault();\r\n            console.log(\"in cancel btn clicked\")\r\n            console.log(\"token \"+localStorage.getItem('jwtToken'))\r\n          \r\n            axios.request({\r\n                method: 'POST',\r\n                url: 'http://localhost:5000/academic/acceptRequest',\r\n                headers: {\r\n                    'x-auth-token':localStorage.getItem('jwtToken')\r\n                },\r\n                data: {\r\n                    requestID: value\r\n                },\r\n              \r\n              }).then(res=>{\r\n                console.log(\"successfull\");\r\n                const location = {\r\n                    pathname: '/receivedRequests',\r\n                    state: { reqType: this.state.reqType,reqTitle: this.state.reqTitle}\r\n                  }\r\n                  \r\n                //   <Link to={location}/>\r\n                //   <Redirect to={location}/>\r\n                 history.push(location)\r\n                //   history.replace(location)\r\n                window.location.reload();\r\n                // console.log('state= '+this.state.reqType+\" title= \"+this.state.reqTitle)\r\n                // if(true){\r\n                //     console.log(\"true\")\r\n                // return(<Redirect to={{pathname: \"/submittedRequests\",state: { reqType: this.state.reqType,reqTitle:this.state.reqTitle }}}/>)\r\n                // }\r\n                // this.setState({cancelSuccess:res.data});\r\n    \r\n            }).catch(error=>{\r\n                console.log(\"cancel error= \"+error.response.data)\r\n                this.setState({cancelWarning:error.response.data});\r\n                })\r\n        }\r\n        handleStateClick(e,value){\r\n            e.preventDefault();\r\n            if(value==\"All\"){\r\n               return this.setState({stateBool:false,reqState:\"All\",cancelWarning:\"\"})\r\n                console.log(\"all= \"+this.state.requests)\r\n            }\r\n            if(this.state.requests.length>0){\r\n               const accept=this.state.requests.filter(request=>{\r\n                   return request.state==value\r\n               })\r\n               console.log(\"accept= \"+accept)\r\n                this.setState({stateRequests:accept,stateBool:true,reqState:value,cancelWarning:\"\"})\r\n                // var reqs=this.state.stateRequests\r\n            }\r\n\r\n        }\r\n        handleReceivedTypeClick(e,value){\r\n            console.log(\"in handle received\");\r\n            e.preventDefault();\r\n            // if(value==\"Maternity\"){\r\n            //    return this.setState({reqType:\"Maternity\"})\r\n            //     console.log(\"all= \"+this.state.requests)\r\n            // }\r\n            if(this.state.unFilteredRequests.length>0){\r\n               const type=this.state.unFilteredRequests.filter(request=>{\r\n                   return request.reqType==value\r\n               })\r\n               console.log(\"type= \"+type)\r\n               var typeTitle=\"\";\r\n               if(value==\"Sick Leave\")\r\n               typeTitle=\"Sick Leave Requests\"\r\n\r\n               if(value==\"Maternity Leave\")\r\n               typeTitle=\"Maternity Leave Requests\"\r\n\r\n               if(value==\"Accidental Leave\")\r\n               typeTitle=\"Accidental Leave Requests\"\r\n\r\n               if(value==\"Annual Leave\")\r\n               typeTitle=\"Annual Leave Requests\"\r\n\r\n               if(value==\"Slot Linking\")\r\n               typeTitle=\"Slot Linking Requests\"\r\n\r\n               if(value==\"Change Day off\")\r\n               typeTitle=\"Change Day Off Requests\"\r\n\r\n               if(value==\"Replacement\")\r\n               typeTitle=\"Replacement Requests\"\r\n\r\n               if(value==\"Compensation Leave\")\r\n               typeTitle=\"Compensation Requests\"\r\n\r\n\r\n                this.setState({reqType:value,reqTitle:typeTitle,requests:type,reqState:\"All\",cancelWarning:\"\"})\r\n               console.log(\"this.state.reqType alooooooo\"+this.state.reqType)\r\n                const location = {\r\n                    pathname: '/receivedRequests',\r\n                    state: { reqType: value,reqTitle: typeTitle}\r\n                  }\r\n                history.push(location)\r\n                // var reqs=this.state.stateRequests\r\n            }\r\n\r\n\r\n        }\r\n        renderMaternityRequest=(request, index)=> {\r\n            console.log(\"submissiondate= \"+request.submission_date+\r\n            \"\\n\"+\"maternityDoc= \"+request.maternityDoc+\r\n            \"\\n\"+\"reason= \"+request.reason+\r\n            \"\\n\"+\"state= \"+request.state)\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\">\r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.maternityDoc}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n\r\n                <td className=\"reqTd\">\r\n               <Button  size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n               <CheckCircleFill color=\"darkred\" className=\"cancelBtn\" size={19} />\r\n               </Button>{\"  \"}\r\n              \r\n              <Button  size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n              <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={19} />\r\n              </Button>\r\n\r\n                </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            }    \r\n            renderSickRequest=(request, index)=> {\r\n                console.log(\"submissiondate= \"+request.submission_date+\r\n                \"\\n\"+\"sickDay= \"+request.sickDay+\r\n                \"\\n\"+\"reason= \"+request.reason+\r\n                \"\\n\"+\"state= \"+request.state)\r\n                return (\r\n                    \r\n                    <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                    <td className=\"reqTd\" >{request.counter}</td>\r\n                    <td className=\"reqTd\">{request.submission_date}</td>\r\n                    <td className=\"reqTd\">{request.sickDay}</td>\r\n                    <td className=\"reqTd\">{request.reason}</td>\r\n                    <td className=\"reqTd\">{request.state}</td>\r\n                    <td className=\"reqTd\">\r\n                    <Button  size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n               <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></Button>\r\n                  </td>\r\n    \r\n                    </tr>\r\n                    \r\n                )\r\n                }\r\n                renderReplacementRequest=(request, index)=> {\r\n                    console.log(\"submissiondate= \"+request.submission_date+\r\n                    \"\\n\"+\"slotDate= \"+request.slotDate+\r\n                    \"\\n\"+\"slotNum= \"+request.slotNum+\r\n                    \"\\n\"+\"slotLoc= \"+request.slotLoc+\r\n                    \"\\n\"+\"reason= \"+request.reason+\r\n                    \"\\n\"+\"state= \"+request.state)\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                \r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.slotDate}</td>\r\n                <td className=\"reqTd\">{request.slotNum}</td>\r\n                <td className=\"reqTd\">{request.slotLoc}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                <Button  size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n               <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></Button>\r\n              </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            } \r\n            renderCompensationRequest=(request, index)=> {\r\n                console.log(\"submissiondate= \"+request.submission_date+\r\n                    \"\\n\"+\"missedDAY= \"+request.missedDay+\r\n                    \"\\n\"+\"reason= \"+request.reason+\r\n                    \"\\n\"+\"state= \"+request.state)\r\n                return (\r\n                    \r\n                    <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                    \r\n                    <td className=\"reqTd\" >{request.counter}</td>\r\n                     <td className=\"reqTd\">{request.submission_date}</td>\r\n                    <td className=\"reqTd\">{request.missedDay}</td>\r\n                    <td className=\"reqTd\">{request.reason}</td>\r\n                    <td className=\"reqTd\">{request.state}</td>\r\n                    <td className=\"reqTd\">\r\n                    <Button  size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n               <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></Button>\r\n                  </td>\r\n    \r\n                    </tr>\r\n                    \r\n                )\r\n                } \r\n                \r\n        renderChangeDayOffRequest=(request, index)=> {\r\n            console.log(\"submissiondate= \"+request.submission_date+\r\n                \"\\n\"+\"missedDAY= \"+request.missedDay+\r\n                \"\\n\"+\"reason= \"+request.reason+\r\n                \"\\n\"+\"state= \"+request.state)\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                \r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTdSick\">{request.newDayOff}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                <Button  size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n               <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></Button>\r\n                </td>\r\n\r\n                </tr>\r\n                \r\n            )\r\n            }\r\n        renderSlotLinkingRequest=(request, index)=> {\r\n            console.log(\"submissiondate= \"+request.submission_date+\r\n                \"\\n\"+\"missedDAY= \"+request.missedDay+\r\n                \"\\n\"+\"reason= \"+request.reason+\r\n                \"\\n\"+\"state= \"+request.state)\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.slotDay}</td>\r\n                <td className=\"reqTd\">{request.slotNum}</td>\r\n                <td className=\"reqTd\">{request.courseID}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                <Button  size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n               <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></Button>\r\n                </td>\r\n                </tr>\r\n                \r\n            )\r\n            }\r\n            renderAccidentalRequest=(request, index)=> {\r\n                console.log(\"submissiondate= \"+request.submission_date+\r\n                    \"\\n\"+\"missedDAY= \"+request.missedDay+\r\n                    \"\\n\"+\"reason= \"+request.reason+\r\n                    \"\\n\"+\"state= \"+request.state)\r\n                return (\r\n                    \r\n                    <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                    <td className=\"reqTd\" >{request.counter}</td>\r\n                    <td className=\"reqTd\">{request.submission_date}</td>\r\n                    <td className=\"reqTd\">{request.accidentDay}</td>\r\n                    <td className=\"reqTd\">{request.reason}</td>\r\n                    <td className=\"reqTd\">{request.state}</td>\r\n                    <td className=\"reqTd\">\r\n                    <Button  size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n               <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></Button>\r\n                    </td>\r\n                    </tr>\r\n                    \r\n                )\r\n                }\r\n                renderAnnualRequest=(request, index)=> {\r\n            console.log(\"submissiondate= \"+request.submission_date+\r\n                \"\\n\"+\"missedDAY= \"+request.missedDay+\r\n                \"\\n\"+\"reason= \"+request.reason+\r\n                \"\\n\"+\"state= \"+request.state)\r\n            return (\r\n                \r\n                <tr key={request.requestID} className=\"reqTr\" className='clickable-row' onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n                <td className=\"reqTd\" >{request.counter}</td>\r\n                <td className=\"reqTd\">{request.submission_date}</td>\r\n                <td className=\"reqTd\">{request.slotNum}</td>\r\n                <td className=\"reqTd\">{request.slotDate}</td>\r\n                <td className=\"reqTd\">{request.replacementStaff}</td>\r\n                <td className=\"reqTd\">{request.reason}</td>\r\n                <td className=\"reqTd\">{request.state}</td>\r\n                <td className=\"reqTd\">\r\n                <Button  size=\"sm\" className=\"cancelButton\" onClick={(e)=>this.handleClick(e,request.requestID)}>\r\n               <XCircleFill color=\"darkred\" className=\"cancelBtn\" size={15} /></Button>\r\n                </td>\r\n                </tr>\r\n                \r\n            )\r\n            }              \r\n                        \r\n                \r\n    render(){\r\n        var reqs=[];\r\n        if(!this.state.stateBool){\r\n            console.log(\"here\")\r\n         reqs=this.state.requests;\r\n        }\r\n        else if(this.state.stateBool){\r\n            console.log(\"other\")\r\n         reqs=this.state.stateRequests;\r\n        }\r\n        var empty=[\"one\"]\r\n            const reqList=reqs.length?(\r\n            empty.map(request=>{\r\n            console.log(\"in mapping \"+request.reqType)\r\n            return(\r\n\r\n                <div className=\"containAll\">\r\n                \r\n            \r\n            \r\n            <div className=\"containDrop\">\r\n            <span className=\"maternityH\">{this.state.reqTitle}</span>\r\n                      <Dropdown as={ButtonGroup}className=\"buttons2\" >\r\n                <Dropdown.Toggle id=\"dropdown-custom-2\" className=\"pickBtn\">Request Type</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                    \r\n                    {this.state.reqType!=\"Accidental Leave\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Accidental Leave\")}>Accidental Leave</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Accidental Leave\" &&<Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Accidental Leave\")}>Accidental Leave</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Annual Leave\" &&  <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Annual Leave\")}>Annual Leave</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Annual Leave\" &&  <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Annual Leave\")}>Annual Leave</Button></Dropdown.Item >}\r\n\r\n\r\n                    {this.state.reqType!=\"Change Day Off\" &&<Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Change Day off\")}>Change Day Off</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Change Day Off\" &&<Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Change Day off\")}>Change Day Off</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Compensation Leave\"  &&<Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Compensation Leave\")}>Compensation</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Compensation Leave\"  &&<Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Compensation Leave\")}>Compensation</Button></Dropdown.Item >}\r\n\r\n\r\n                    {this.state.reqType!=\"Maternity Leave\" &&  <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Maternity Leave\")}>Materity</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Maternity Leave\" &&  <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Maternity Leave\")}>Materity</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Replacement\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Replacement\")}>Replacement</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Replacement\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Replacement\")}>Replacement</Button></Dropdown.Item >}\r\n                    \r\n                    {this.state.reqType!=\"Sick Leave\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Sick Leave\")}>Sick</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Sick Leave\" && <Dropdown.Item  active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Sick Leave\")}>Sick</Button></Dropdown.Item >}\r\n                   \r\n                    {this.state.reqType!=\"Slot Linking\" &&  <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Slot Linking\")}>Slot Linking</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Slot Linking\" &&  <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleTypeClick(e,\"Slot Linking\")}>Slot Linking</Button></Dropdown.Item >}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>{' '} \r\n\r\n                    <Dropdown as={ButtonGroup} className=\"buttons1\">\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\" className=\"pickBtn\" >State</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"drop1\">\r\n                    {/* <Dropdown.Item ><Link to=\"/ViewAcceptedMaternityRequests\">Accepted</Link></Dropdown.Item> */}\r\n             \r\n                  \r\n                    {this.state.reqState!=\"All\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"All\")}>All</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"All\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"All\")}>All</Button></Dropdown.Item >}\r\n                    {this.state.reqState!=\"Accepted\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Accepted\")}>Accepted</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"Accepted\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Accepted\")}>Accepted</Button></Dropdown.Item >} \r\n                    {this.state.reqState!=\"Rejected\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Rejected\")}>Rejected</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"Rejected\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Rejected\")}>Rejected</Button></Dropdown.Item >}\r\n                    {this.state.reqState!=\"Pending\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Pending\")}>Pending</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"Pending\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Pending\")}>Pending</Button></Dropdown.Item >}\r\n                    \r\n                    \r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n               \r\n              \r\n                </div>      \r\n\r\n                \r\n\r\n             {this.state.reqType==\"Maternity Leave\" &&  \r\n              <div className=\" containMaternityTable\">\r\n\r\n                {this.state.cancelWarning!=\"\" && <h5 class=\"cancelWarning\">{this.state.cancelWarning}</h5>}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                    <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Documents</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderMaternityRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>\r\n                }\r\n\r\n\r\n                {this.state.reqType==\"Sick Leave\" &&  \r\n              <div className=\" containMaternityTable\">\r\n\r\n                {this.state.cancelWarning!=\"\" && <h5 class=\"cancelWarning\">{this.state.cancelWarning}</h5>}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Sick Day</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderSickRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>\r\n                }\r\n\r\n                {this.state.reqType==\"Replacement\" &&\r\n                <div className=\" containMaternityTable  \">\r\n                {this.state.cancelWarning!=\"\" && <h5 class=\"cancelWarning\">{this.state.cancelWarning}</h5>}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                    <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Slot Date</th>\r\n                    <th className=\"reqTh\">Slot Number</th>\r\n                    <th className=\"reqTh\">Slot Location</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderReplacementRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div> \r\n                }\r\n\r\n                {this.state.reqType==\"Compensation Leave\" &&\r\n                <div className=\" containMaternityTable  \">\r\n                {this.state.cancelWarning!=\"\" && <h5 class=\"cancelWarning\">{this.state.cancelWarning}</h5>}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Missed Day</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderCompensationRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div> }\r\n\r\n                {this.state.reqType==\"Change Day off\" &&\r\n                <div className=\" containMaternityTable \">\r\n                {this.state.cancelWarning!=\"\" && <h5 class=\"cancelWarning\">{this.state.cancelWarning}</h5>}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">New Day-Off</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderChangeDayOffRequest)}\r\n                </tbody>\r\n                </Table>\r\n                </div>}\r\n\r\n                {this.state.reqType==\"Slot Linking\" &&<div className=\" containMaternityTable  \">\r\n                {this.state.cancelWarning!=\"\" && <h5 class=\"cancelWarning\">{this.state.cancelWarning}</h5>}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                    <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Slot Day</th>\r\n                    <th className=\"reqTh\">Slot Number</th>\r\n                    <th className=\"reqTh\">Course ID</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderSlotLinkingRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>}\r\n\r\n                {this.state.reqType==\"Accidental Leave\" && <div className=\" containMaternityTable  \">\r\n                {this.state.cancelWarning!=\"\" && <h5 class=\"cancelWarning\">{this.state.cancelWarning}</h5>}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                    <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Accident Date</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderAccidentalRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>}\r\n\r\n                {this.state.reqType==\"Annual\"&&\r\n                /* ,slotNum:sent[i].slotNum,slotDate:sent[i].slotDate,\r\n                    slotLoc:sent[i].slotLoc, replacementStaff:repl, */\r\n                <div className=\" containMaternityTable\">\r\n                {this.state.cancelWarning!=\"\" && <h5 class=\"cancelWarning\">{this.state.cancelWarning}</h5>}\r\n                <Table striped bordered variant=\"dark\" hover size=\"sm\" className=\"reqTable \" >\r\n                <thead className=\"reqHead\">\r\n                    <tr className=\"reqTr\">\r\n                    <th className=\"reqTh\">#</th>\r\n                    <th className=\"reqTh\">Submission Date</th>\r\n                    <th className=\"reqTh\">Slot Number</th>\r\n                    <th className=\"reqTh\">Slot Date</th>\r\n                    <th className=\"reqTh\">Replacement Staff</th>\r\n                    <th className=\"reqTh\">Reason</th>\r\n                    <th className=\"reqTh\">State</th>\r\n                    <th className=\"reqTh\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"reqBody\">\r\n                {reqs.map(this.renderAnnualRequest)}\r\n                </tbody>\r\n                </Table>\r\n                {/* </span> */}\r\n                </div>}\r\n                    \r\n                    \r\n                    \r\n                    \r\n                    \r\n                    \r\n\r\n\r\n                </div>\r\n                        \r\n            \r\n              )\r\n            })\r\n        )\r\n        \r\n        :\r\n        (\r\n        <div className=\"center\">\r\n        {/* <h3>{this.state.reqTitle}</h3> */}\r\n       {/* <h4> No requests yet</h4> */}\r\n\r\n       <div className=\"containDrop c2\">\r\n            <span className=\"noReq\"><h3>{this.state.reqTitle}</h3></span>\r\n                      <Dropdown as={ButtonGroup} className=\"buttons2\" >\r\n                <Dropdown.Toggle id=\"dropdown-custom-2\" className=\"pickBtn\">Request Type</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                    {this.state.reqType!=\"Maternity Leave\" &&  <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReceivedTypeClick(e,\"Maternity Leave\")}>Materity</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Maternity Leave\" &&  <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReceivedTypeClick(e,\"Maternity Leave\")}>Materity</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Sick Leave\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReceivedTypeClick(e,\"Sick Leave\")}>Sick</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Sick Leave\" && <Dropdown.Item  active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReceivedTypeClick(e,\"Sick Leave\")}>Sick</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Replacement\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReceivedTypeClick(e,\"Replacement\")}>Replacement</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Replacement\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReceivedTypeClick(e,\"Replacement\")}>Replacement</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Compensation Leave\"  &&<Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReceivedTypeClick(e,\"Compensation Leave\")}>Compensation</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Compensation Leave\"  &&<Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReceivedTypeClick(e,\"Compensation Leave\")}>Compensation</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Accidental Leave\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReceivedTypeClick(e,\"Accidental Leave\")}>Accidental Leave</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Accidental Leave\" &&<Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReceivedTypeClick(e,\"Accidental Leave\")}>Accidental Leave</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Annual Leave\" &&  <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReceivedTypeClick(e,\"Annual Leave\")}>Annual Leave</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Annual Leave\" &&  <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReceivedTypeClick(e,\"Annual Leave\")}>Annual Leave</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Change Day Off\" &&<Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReceivedTypeClick(e,\"Change Day off\")}>Change Day Off</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Change Day Off\" &&<Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReceivedTypeClick(e,\"Change Day off\")}>Change Day Off</Button></Dropdown.Item >}\r\n                    {this.state.reqType!=\"Slot Linking\" &&  <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReceivedTypeClick(e,\"Slot Linking\")}>Slot Linking</Button></Dropdown.Item >}\r\n                    {this.state.reqType==\"Slot Linking\" &&  <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReceivedTypeClick(e,\"Slot Linking\")}>Slot Linking</Button></Dropdown.Item >}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>{' '} \r\n\r\n                    <Dropdown as={ButtonGroup} className=\"buttons1\">\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\" className=\"pickBtn\" >State</Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"drop1\">\r\n                    {/* <Dropdown.Item ><Link to=\"/ViewAcceptedMaternityRequests\">Accepted</Link></Dropdown.Item> */}\r\n             \r\n                  \r\n                    {this.state.reqState!=\"All\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"All\")}>All</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"All\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"All\")}>All</Button></Dropdown.Item >}\r\n                    {this.state.reqState!=\"Accepted\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Accepted\")}>Accepted</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"Accepted\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Accepted\")}>Accepted</Button></Dropdown.Item >} \r\n                    {this.state.reqState!=\"Rejected\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Rejected\")}>Rejected</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"Rejected\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Rejected\")}>Rejected</Button></Dropdown.Item >}\r\n                    {this.state.reqState!=\"Pending\" && <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Pending\")}>Pending</Button></Dropdown.Item >} \r\n                    {this.state.reqState==\"Pending\" && <Dropdown.Item active> <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleStateClick(e,\"Pending\")}>Pending</Button></Dropdown.Item >}\r\n                    \r\n                    \r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n               \r\n              \r\n                </div>    \r\n                <div class=\"alert alert-primary\" role=\"alert\" >\r\n               No requests yet!\r\n                </div>  \r\n\r\n        </div>\r\n        )\r\n\r\n        \r\n        return (\r\n            <div>\r\n           {reqList}\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewReceivedRequests","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\callGetRequests.js",["514","515","516","517","518","519","520","521","522","523","524","525"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport '../css/test44.css'\r\n// import '../css/bootstrap.min.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { CheckCircle, XCircle, XCircleFill } from 'react-bootstrap-icons';\r\n\r\nclass callGetRequets extends Component{\r\n    render(){\r\n     const g=   <Link to= {{pathname:'/submittedRequests',state:{reqType:\"Sick Leave\",reqTitle:\"Sick Leave Requests\"}}}>Click me</Link>\r\n   \r\n    return (\r\n                <div>\r\n                  {g} \r\n                </div>\r\n    )\r\n}\r\n }\r\n\r\n export default callGetRequets","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\callGetReceivedRequests.js",["526","527","528","529","530","531","532","533","534","535","536","537"],"E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\getRequestsForms.js",["538","539","540","541","542","543","544","545","546","547"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport '../css/test44.css'\r\n// import '../css/bootstrap.min.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { CheckCircle, XCircle, XCircleFill } from 'react-bootstrap-icons';\r\n\r\nclass getRequestsForms extends Component{\r\n    render(){\r\n\r\n        const r=\r\n        <div>\r\n        <div className=\"reqForm\">\r\n            <span className=\"maternityH\">Requests Forms</span>\r\n            <DropdownButton id=\"dropdown-basic-button\" title=\"Dropdown button\" className=\"reqFormDrop\">\r\n            <Dropdown.Item><Link to= {{pathname:'/requestsForms',state:{formType:\"Accidental Leave\",formTitle:\"Accidental Leave Request Form\"}}} >Accidental Leave Request</Link></Dropdown.Item>\r\n            <Dropdown.Item><Link to= {{pathname:'/requestsForms',state:{formType:\"Annual Leave\",formTitle:\"Annual Leave Request Form\"}}}>Annual Leave Request</Link></Dropdown.Item>\r\n            <Dropdown.Item><Link to= {{pathname:'/requestsForms',state:{formType:\"Compensation Leave\",formTitle:\"Compensation Request Form\"}}}>Compensation Request</Link></Dropdown.Item>\r\n            <Dropdown.Item><Link to= {{pathname:'/requestsForms',state:{formType:\"Change Day off\",formTitle:\"Change Day Off Request Form\"}}}>Change Day Off Request</Link></Dropdown.Item>\r\n            <Dropdown.Item><Link to= {{pathname:'/requestsForms',state:{formType:\"Maternity Leave\",formTitle:\"Maternity Leave Request Form\"}}}>Maternity Leave Request</Link></Dropdown.Item>\r\n            <Dropdown.Item><Link to= {{pathname:'/requestsForms',state:{formType:\"Replacement\",formTitle:\"Replacement Request Form\"}}}>Replacement Request</Link></Dropdown.Item>\r\n            <Dropdown.Item><Link to= {{pathname:'/requestsForms',state:{formType:\"Sick Leave\",formTitle:\"Sick Leave Request Form\"}}}>Sick Leave Request</Link></Dropdown.Item>\r\n            <Dropdown.Item><Link to= {{pathname:'/requestsForms',state:{formType:\"Slot Linking\",formTitle:\"Slot Linking Request Form\"}}}>Slot Linking Request</Link></Dropdown.Item>\r\n            \r\n           \r\n            \r\n            </DropdownButton>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return(\r\n            <div>\r\n                {r}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default getRequestsForms","E:\\sem 7\\Advanced computer lab\\milestone2\\ACML-Project-GUCPortal\\frontend\\src\\components\\requestsForms.js",["548"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport '../css/test44.css'\r\n// import '../css/bootstrap.min.css'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport history from '../history';\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { CheckCircle, XCircle, XCircleFill } from 'react-bootstrap-icons';\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nclass requestsForms extends Component{\r\n\r\n    state={\r\n        formType:\"\",\r\n        formTitle:\"\",\r\n        fields:[],\r\n        accidentalWarning:\"\",\r\n        accidentalDate:\"\",\r\n        accidentalReason:\"\",\r\n        accidentalSuccess:false,\r\n        annualReason:\"\",\r\n        annualSlotDate:\"\",\r\n        annualSlotNum:\"\",\r\n        annualSlotLoc:\"\",\r\n        annualWarning:\"\",\r\n        annualSucces:\"\"\r\n    }\r\n    componentDidMount(props){\r\n        console.log(\"here in reqForms\")\r\n        console.log(\"success at start? \"+this.state.accidentalSuccess)\r\n        console.log(\"this.state.reqType= \"+this.props.location.state.formType)\r\n             const temp=this.props.location.state.formType;\r\n             const tempTitle=this.props.location.state.formTitle;\r\n             this.setState({formType:temp,formTitle:tempTitle});\r\n    }\r\n\r\n    onFormSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(\"submitted\")\r\n        console.log(\"name entered\")\r\n    }\r\n    handleAccidentalChange=(e)=>{\r\n        console.log(\"e.target.value= \"+e.target.value)\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n        console.log(\"ad= \"+this.state.accidentalDate)\r\n        console.log(\"r= \"+this.state.accidentalReason)\r\n        console.log(\"working\")\r\n    }\r\n    onFormAccidentalSubmit = e => {\r\n        this.setState({accidentalWarning:\"\",accidentalSuccess:false})\r\n        e.preventDefault();\r\n        console.log(\"accidental submitted\")\r\n        axios.request({\r\n            method: 'POST',\r\n            url: 'http://localhost:5000/academic/accidentalLeave',\r\n            headers: {\r\n                'x-auth-token':localStorage.getItem('jwtToken')\r\n            },\r\n            data: {\r\n                accidentDate:this.state.accidentalDate,\r\n                reason:this.state.accidentalReason\r\n            },\r\n          \r\n          }).then(res=>{\r\n            console.log(\"successfull\");\r\n            this.setState({accidentalSuccess:true});\r\n        }).catch(error=>{\r\n            console.log(\"cancel error= \"+error.response.data)\r\n            this.setState({accidentalWarning:error.response.data});\r\n            })\r\n    }\r\n\r\n    onFormAnnualSubmit = e => {\r\n        this.setState({accidentalWarning:\"\",accidentalSuccess:false})\r\n        e.preventDefault();\r\n        console.log(\"accidental submitted\")\r\n        axios.request({\r\n            method: 'POST',\r\n            url: 'http://localhost:5000/academic/annualLeave',\r\n            headers: {\r\n                'x-auth-token':localStorage.getItem('jwtToken')\r\n            },\r\n            data: {\r\n                slotNum:,\r\n                slotDate:,\r\n                slotLoc:\r\n            },\r\n          \r\n          }).then(res=>{\r\n            console.log(\"successfull\");\r\n            this.setState({accidentalSuccess:true});\r\n        }).catch(error=>{\r\n            console.log(\"cancel error= \"+error.response.data)\r\n            this.setState({accidentalWarning:error.response.data});\r\n            })\r\n    }\r\n    handleReqForm(e,formType,formTitle){\r\n        console.log(\"check= \"+this.state.accidentalSuccess)\r\n        e.preventDefault();\r\n        const location = {\r\n            pathname: '/requestsForms',\r\n            state: { formType: formType,formTitle: formTitle}\r\n          }\r\n        history.push(location)\r\n        window.location.reload();\r\n    }\r\n    render(){\r\n        const g=\r\n        <div>\r\n        {/* <div><h3>{this.formTitle}</h3></div> */}\r\n        <div className=\"reqForm\">\r\n            {/* <span className=\"maternityH\">{this.formTitle}</span> */}\r\n            <DropdownButton id=\"dropdown-basic-button\" title=\"Dropdown button\" className=\"reqFormDrop\">\r\n            <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReqForm(e,\"Accidental Leave\",\"Accidental Leave Request Form\")}>Accidental Leave Request</Button></Dropdown.Item>\r\n             <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReqForm(e,\"Annual Leave\",\"Annual Leave Request Form\")}>Annual Leave Reques</Button></Dropdown.Item>\r\n             <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReqForm(e,\"Compensation Leave\",\"Compensation Request Form\")}>Compensation Request</Button></Dropdown.Item>\r\n             <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReqForm(e,\"Change Day off\",\"Change Day Off Request Form\")}>Change Day Off Request</Button></Dropdown.Item>\r\n             <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReqForm(e,\"Maternity Leave\",\"Maternity Leave Request Form\")}>Maternity Leave Request</Button></Dropdown.Item>\r\n             <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReqForm(e,\"Replacement\",\"Replacement Request Form\")}>Replacement Request</Button></Dropdown.Item>\r\n             <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReqForm(e,\"Sick Leave\",\"Sick Leave Request Form\")}>Sick Leave Request</Button></Dropdown.Item>\r\n             <Dropdown.Item > <Button variant=\"primary\" size=\"sm\" className=\"acceptButton\" onClick={(e)=>this.handleReqForm(e,\"Slot Linking\",\"Slot Linking Request Form\")}>Slot Linking Request</Button></Dropdown.Item>\r\n\r\n            \r\n            \r\n            </DropdownButton>\r\n            </div>\r\n        {this.state.formType==\"Accidental Leave\" &&\r\n       \r\n         <form onSubmit={this.onFormAccidentalSubmit}>\r\n         \r\n        <label className=\"col-form-label\" htmlFor=\"accidentalDate\">Accident Date</label>\r\n        <input type=\"date\" className=\"form-control\" \r\n        placeholder=\"YYYY-MM-DD\" id=\"accidentalDate\" required onChange={this.handleAccidentalChange}/>\r\n        <label className=\"col-form-label\" htmlFor=\"accidentalReason\">Reason</label>\r\n        <input type=\"text\" className=\"form-control\" placeholder=\"Default input\" id=\"accidentalReason\" onChange={this.handleAccidentalChange}/>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n         Submit\r\n        </Button> \r\n        {this.state.accidentalSuccess && <h6 className=\"accidentalSuccess\">Request successfully submitted!</h6> }\r\n        {this.state.accidentalWarning!=\"\" && <h6 className=\"accidentalWarning\">{this.state.accidentalWarning}</h6>}\r\n         </form>}\r\n\r\n        {/* /* <Form onSubmit={this.onFormAccidentalSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Accident Date</Form.Label>\r\n                <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\"\r\n                 data-date-format=\"YYYY-MM-DD\"  onChange={this.handleAccidentalChange}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Reason</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"reason\"  onChange={this.handleAccidentalChange}/>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n            </Form> */}\r\n        \r\n    \r\n     {this.state.formType==\"Annual Leave\" && \r\n     <form onSubmit={this.onFormAnnualSubmit}>\r\n         \r\n        <label className=\"col-form-label\" htmlFor=\"annualDate\">Day Off Date</label>\r\n        <input type=\"date\" className=\"form-control\" placeholder=\"YYYY-MM-DD\" id=\"annualDate\" required onChange={this.handleAnnualChange}/>\r\n\r\n        {/* <label className=\"col-form-label\" htmlFor=\"annualReplacement\">Replacement Staff</label>\r\n        <input type=\"text\" className=\"form-control\" placeholder=\"Default input\" id=\"annualReplacement\" onChange={this.handleAnnualChange}/>\r\n         */}\r\n        <label className=\"col-form-label\" htmlFor=\"annualReason\">Reason</label>\r\n        <input type=\"text\" className=\"form-control\" placeholder=\"Default input\" id=\"annualReason\" onChange={this.handleAnnualChange}/>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n         Submit\r\n        </Button> \r\n        {this.state.annualSuccess && <h6 className=\"accidentalSuccess\">Request successfully submitted!</h6> }\r\n        {this.state.annualWarning!=\"\" && <h6 className=\"accidentalWarning\">{this.state.annualWarning}</h6>}\r\n         </form>}\r\n\r\n        {/* /* {<Form onSubmit={this.onFormSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Day Off Date</Form.Label>\r\n                <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\" required/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Replacement Staff</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter name\"/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Reason</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"reason\"/>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n            </Form> }*/}\r\n\r\n\r\n   \r\n\r\n    {this.state.formType==\"Compensation Leave\" &&\r\n        <Form onSubmit={this.onFormSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Missed Day</Form.Label>\r\n                <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\" required/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Reason</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"reason\"/>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n            </Form>\r\n        \r\n        \r\n    }\r\n\r\n    \r\n    {this.state.formType==\"Change Day off\" &&\r\n    <Form onSubmit={this.onFormSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>New Day Off</Form.Label>\r\n                <Form.Control type=\"test\" placeholder=\"\" required oninvalid=\"this.setCustomValidity('Please Enter valid email')\"\r\n oninput=\"setCustomValidity('')\"/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Reason</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"reason\"/>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n            </Form>\r\n    \r\n    \r\n    }    \r\n\r\n    {this.state.formType==\"Maternity Leave\" &&\r\n    \r\n    <Form onSubmit={this.onFormSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Leave Start Date</Form.Label>\r\n                <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\" required/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Leave End Date</Form.Label>\r\n                <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\" required/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Medical Documents</Form.Label>\r\n                <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\" required/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Reason</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"reason\"/>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n    \r\n    } \r\n\r\n    \r\n    {this.state.formType==\"Replacement\" &&\r\n    <Form onSubmit={this.onFormSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Slot Date</Form.Label>\r\n                <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\" required/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Slot Number</Form.Label>\r\n                <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\" required/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Slot Location</Form.Label>\r\n                <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\" required/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Replacement Staff</Form.Label>\r\n                <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\" required/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Reason</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"reason\"/>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n    \r\n    }  \r\n\r\n    {this.state.formType==\"Sick Leave\" &&\r\n    <Form onSubmit={this.onFormSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Sick Date</Form.Label>\r\n                <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\" required/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Medical Documents</Form.Label>\r\n                <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\" required/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Reason</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"reason\"/>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n    } \r\n\r\n    {/* {this.state.formType==\"Slot Linking\" &&\r\n    <div className=\"form-group\">\r\n    <label className=\"col-form-label\" htmlFor=\"inputDefault\">Slot Day</label>\r\n    <input type=\"text\" className=\"form-control\" placeholder=\"Default input\" id=\"inputDefault\" required/>\r\n    <label className=\"col-form-label\" htmlFor=\"inputDefault\">Slot Number</label>\r\n    <input type=\"text\" className=\"form-control\" placeholder=\"Default input\" id=\"inputDefault\" required/>\r\n    <label className=\"col-form-label\" htmlFor=\"inputDefault\">Course ID</label>\r\n    <input type=\"text\" className=\"form-control\" placeholder=\"Default input\" id=\"inputDefault\" required/>\r\n   \r\n   <label className=\"col-form-label\" htmlFor=\"inputDefault\">Reason</label>\r\n    <input type=\"text\" className=\"form-control\" placeholder=\"Default input\" id=\"inputDefault\" />   \r\n    </div>}   */}\r\n\r\n    </div>\r\n     \r\n\r\n\r\n\r\n    return (\r\n                <div>\r\n                   {g}\r\n                </div>\r\n    )\r\n}\r\n }\r\n\r\n export default requestsForms",{"ruleId":"549","severity":1,"message":"550","line":6,"column":9,"nodeType":"551","messageId":"552","endLine":6,"endColumn":17},{"ruleId":"549","severity":1,"message":"553","line":10,"column":7,"nodeType":"551","messageId":"552","endLine":10,"endColumn":12},{"ruleId":"554","replacedBy":"555"},{"ruleId":"556","replacedBy":"557"},{"ruleId":"554","replacedBy":"558"},{"ruleId":"556","replacedBy":"559"},{"ruleId":"549","severity":1,"message":"560","line":1,"column":8,"nodeType":"551","messageId":"552","endLine":1,"endColumn":12},{"ruleId":"549","severity":1,"message":"561","line":33,"column":9,"nodeType":"551","messageId":"552","endLine":33,"endColumn":22},{"ruleId":"549","severity":1,"message":"562","line":33,"column":36,"nodeType":"551","messageId":"552","endLine":33,"endColumn":42},{"ruleId":"549","severity":1,"message":"563","line":2,"column":8,"nodeType":"551","messageId":"552","endLine":2,"endColumn":13},{"ruleId":"549","severity":1,"message":"564","line":3,"column":9,"nodeType":"551","messageId":"552","endLine":3,"endColumn":13},{"ruleId":"549","severity":1,"message":"565","line":3,"column":14,"nodeType":"551","messageId":"552","endLine":3,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":4,"column":11,"nodeType":"551","messageId":"552","endLine":4,"endColumn":19},{"ruleId":"554","replacedBy":"567"},{"ruleId":"556","replacedBy":"568"},{"ruleId":"549","severity":1,"message":"569","line":3,"column":10,"nodeType":"551","messageId":"552","endLine":3,"endColumn":16},{"ruleId":"549","severity":1,"message":"570","line":6,"column":8,"nodeType":"551","messageId":"552","endLine":6,"endColumn":22},{"ruleId":"549","severity":1,"message":"571","line":9,"column":8,"nodeType":"551","messageId":"552","endLine":9,"endColumn":15},{"ruleId":"549","severity":1,"message":"565","line":10,"column":14,"nodeType":"551","messageId":"552","endLine":10,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":11,"column":11,"nodeType":"551","messageId":"552","endLine":11,"endColumn":19},{"ruleId":"549","severity":1,"message":"570","line":7,"column":8,"nodeType":"551","messageId":"552","endLine":7,"endColumn":22},{"ruleId":"549","severity":1,"message":"571","line":10,"column":8,"nodeType":"551","messageId":"552","endLine":10,"endColumn":15},{"ruleId":"549","severity":1,"message":"565","line":11,"column":14,"nodeType":"551","messageId":"552","endLine":11,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":12,"column":11,"nodeType":"551","messageId":"552","endLine":12,"endColumn":19},{"ruleId":"549","severity":1,"message":"572","line":13,"column":10,"nodeType":"551","messageId":"552","endLine":13,"endColumn":21},{"ruleId":"549","severity":1,"message":"573","line":13,"column":23,"nodeType":"551","messageId":"552","endLine":13,"endColumn":30},{"ruleId":"574","severity":1,"message":"575","line":72,"column":21,"nodeType":"576","messageId":"577","endLine":72,"endColumn":23},{"ruleId":"578","severity":1,"message":"579","line":74,"column":17,"nodeType":"580","messageId":"581","endLine":74,"endColumn":57},{"ruleId":"574","severity":1,"message":"575","line":78,"column":40,"nodeType":"576","messageId":"577","endLine":78,"endColumn":42},{"ruleId":"582","severity":1,"message":"583","line":90,"column":63,"nodeType":"584","endLine":90,"endColumn":88},{"ruleId":"585","severity":1,"message":"586","line":98,"column":16,"nodeType":"587","endLine":98,"endColumn":20},{"ruleId":"554","replacedBy":"588"},{"ruleId":"556","replacedBy":"589"},{"ruleId":"549","severity":1,"message":"570","line":7,"column":8,"nodeType":"551","messageId":"552","endLine":7,"endColumn":22},{"ruleId":"549","severity":1,"message":"571","line":10,"column":8,"nodeType":"551","messageId":"552","endLine":10,"endColumn":15},{"ruleId":"549","severity":1,"message":"565","line":11,"column":14,"nodeType":"551","messageId":"552","endLine":11,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":12,"column":11,"nodeType":"551","messageId":"552","endLine":12,"endColumn":19},{"ruleId":"549","severity":1,"message":"572","line":13,"column":10,"nodeType":"551","messageId":"552","endLine":13,"endColumn":21},{"ruleId":"549","severity":1,"message":"573","line":13,"column":23,"nodeType":"551","messageId":"552","endLine":13,"endColumn":30},{"ruleId":"574","severity":1,"message":"575","line":72,"column":21,"nodeType":"576","messageId":"577","endLine":72,"endColumn":23},{"ruleId":"578","severity":1,"message":"579","line":74,"column":17,"nodeType":"580","messageId":"581","endLine":74,"endColumn":57},{"ruleId":"574","severity":1,"message":"575","line":78,"column":40,"nodeType":"576","messageId":"577","endLine":78,"endColumn":42},{"ruleId":"582","severity":1,"message":"583","line":89,"column":63,"nodeType":"584","endLine":89,"endColumn":88},{"ruleId":"585","severity":1,"message":"586","line":99,"column":16,"nodeType":"587","endLine":99,"endColumn":20},{"ruleId":"549","severity":1,"message":"570","line":7,"column":8,"nodeType":"551","messageId":"552","endLine":7,"endColumn":22},{"ruleId":"549","severity":1,"message":"571","line":10,"column":8,"nodeType":"551","messageId":"552","endLine":10,"endColumn":15},{"ruleId":"549","severity":1,"message":"565","line":11,"column":14,"nodeType":"551","messageId":"552","endLine":11,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":12,"column":11,"nodeType":"551","messageId":"552","endLine":12,"endColumn":19},{"ruleId":"549","severity":1,"message":"572","line":13,"column":10,"nodeType":"551","messageId":"552","endLine":13,"endColumn":21},{"ruleId":"549","severity":1,"message":"573","line":13,"column":23,"nodeType":"551","messageId":"552","endLine":13,"endColumn":30},{"ruleId":"574","severity":1,"message":"575","line":72,"column":21,"nodeType":"576","messageId":"577","endLine":72,"endColumn":23},{"ruleId":"578","severity":1,"message":"579","line":74,"column":17,"nodeType":"580","messageId":"581","endLine":74,"endColumn":57},{"ruleId":"574","severity":1,"message":"575","line":78,"column":40,"nodeType":"576","messageId":"577","endLine":78,"endColumn":42},{"ruleId":"582","severity":1,"message":"583","line":89,"column":63,"nodeType":"584","endLine":89,"endColumn":88},{"ruleId":"585","severity":1,"message":"586","line":98,"column":16,"nodeType":"587","endLine":98,"endColumn":20},{"ruleId":"549","severity":1,"message":"570","line":7,"column":8,"nodeType":"551","messageId":"552","endLine":7,"endColumn":22},{"ruleId":"549","severity":1,"message":"571","line":10,"column":8,"nodeType":"551","messageId":"552","endLine":10,"endColumn":15},{"ruleId":"549","severity":1,"message":"565","line":11,"column":14,"nodeType":"551","messageId":"552","endLine":11,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":12,"column":11,"nodeType":"551","messageId":"552","endLine":12,"endColumn":19},{"ruleId":"549","severity":1,"message":"572","line":13,"column":10,"nodeType":"551","messageId":"552","endLine":13,"endColumn":21},{"ruleId":"549","severity":1,"message":"573","line":13,"column":23,"nodeType":"551","messageId":"552","endLine":13,"endColumn":30},{"ruleId":"549","severity":1,"message":"590","line":41,"column":17,"nodeType":"551","messageId":"552","endLine":41,"endColumn":21},{"ruleId":"574","severity":1,"message":"575","line":71,"column":21,"nodeType":"576","messageId":"577","endLine":71,"endColumn":23},{"ruleId":"578","severity":1,"message":"579","line":73,"column":17,"nodeType":"580","messageId":"581","endLine":73,"endColumn":57},{"ruleId":"574","severity":1,"message":"575","line":77,"column":40,"nodeType":"576","messageId":"577","endLine":77,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":147,"column":41,"nodeType":"576","messageId":"577","endLine":147,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":148,"column":41,"nodeType":"576","messageId":"577","endLine":148,"endColumn":43},{"ruleId":"574","severity":1,"message":"591","line":149,"column":41,"nodeType":"576","messageId":"577","endLine":149,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":150,"column":41,"nodeType":"576","messageId":"577","endLine":150,"endColumn":43},{"ruleId":"574","severity":1,"message":"591","line":151,"column":41,"nodeType":"576","messageId":"577","endLine":151,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":152,"column":41,"nodeType":"576","messageId":"577","endLine":152,"endColumn":43},{"ruleId":"574","severity":1,"message":"591","line":153,"column":41,"nodeType":"576","messageId":"577","endLine":153,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":154,"column":41,"nodeType":"576","messageId":"577","endLine":154,"endColumn":43},{"ruleId":"574","severity":1,"message":"591","line":168,"column":42,"nodeType":"576","messageId":"577","endLine":168,"endColumn":44},{"ruleId":"549","severity":1,"message":"570","line":8,"column":8,"nodeType":"551","messageId":"552","endLine":8,"endColumn":22},{"ruleId":"549","severity":1,"message":"571","line":11,"column":8,"nodeType":"551","messageId":"552","endLine":11,"endColumn":15},{"ruleId":"549","severity":1,"message":"565","line":12,"column":14,"nodeType":"551","messageId":"552","endLine":12,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":13,"column":11,"nodeType":"551","messageId":"552","endLine":13,"endColumn":19},{"ruleId":"549","severity":1,"message":"572","line":14,"column":10,"nodeType":"551","messageId":"552","endLine":14,"endColumn":21},{"ruleId":"549","severity":1,"message":"573","line":14,"column":23,"nodeType":"551","messageId":"552","endLine":14,"endColumn":30},{"ruleId":"574","severity":1,"message":"575","line":73,"column":21,"nodeType":"576","messageId":"577","endLine":73,"endColumn":23},{"ruleId":"578","severity":1,"message":"579","line":75,"column":17,"nodeType":"580","messageId":"581","endLine":75,"endColumn":57},{"ruleId":"574","severity":1,"message":"575","line":79,"column":40,"nodeType":"576","messageId":"577","endLine":79,"endColumn":42},{"ruleId":"582","severity":1,"message":"583","line":90,"column":63,"nodeType":"584","endLine":90,"endColumn":88},{"ruleId":"585","severity":1,"message":"586","line":101,"column":16,"nodeType":"587","endLine":101,"endColumn":20},{"ruleId":"549","severity":1,"message":"569","line":3,"column":10,"nodeType":"551","messageId":"552","endLine":3,"endColumn":16},{"ruleId":"549","severity":1,"message":"570","line":8,"column":8,"nodeType":"551","messageId":"552","endLine":8,"endColumn":22},{"ruleId":"549","severity":1,"message":"571","line":11,"column":8,"nodeType":"551","messageId":"552","endLine":11,"endColumn":15},{"ruleId":"549","severity":1,"message":"565","line":12,"column":14,"nodeType":"551","messageId":"552","endLine":12,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":13,"column":11,"nodeType":"551","messageId":"552","endLine":13,"endColumn":19},{"ruleId":"549","severity":1,"message":"572","line":14,"column":10,"nodeType":"551","messageId":"552","endLine":14,"endColumn":21},{"ruleId":"549","severity":1,"message":"573","line":14,"column":23,"nodeType":"551","messageId":"552","endLine":14,"endColumn":30},{"ruleId":"582","severity":1,"message":"583","line":70,"column":63,"nodeType":"584","endLine":70,"endColumn":88},{"ruleId":"585","severity":1,"message":"586","line":82,"column":16,"nodeType":"587","endLine":82,"endColumn":20},{"ruleId":"549","severity":1,"message":"570","line":8,"column":8,"nodeType":"551","messageId":"552","endLine":8,"endColumn":22},{"ruleId":"549","severity":1,"message":"571","line":11,"column":8,"nodeType":"551","messageId":"552","endLine":11,"endColumn":15},{"ruleId":"549","severity":1,"message":"565","line":12,"column":14,"nodeType":"551","messageId":"552","endLine":12,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":13,"column":11,"nodeType":"551","messageId":"552","endLine":13,"endColumn":19},{"ruleId":"549","severity":1,"message":"572","line":14,"column":10,"nodeType":"551","messageId":"552","endLine":14,"endColumn":21},{"ruleId":"549","severity":1,"message":"573","line":14,"column":23,"nodeType":"551","messageId":"552","endLine":14,"endColumn":30},{"ruleId":"574","severity":1,"message":"575","line":73,"column":21,"nodeType":"576","messageId":"577","endLine":73,"endColumn":23},{"ruleId":"578","severity":1,"message":"579","line":75,"column":17,"nodeType":"580","messageId":"581","endLine":75,"endColumn":57},{"ruleId":"574","severity":1,"message":"575","line":79,"column":40,"nodeType":"576","messageId":"577","endLine":79,"endColumn":42},{"ruleId":"582","severity":1,"message":"583","line":90,"column":63,"nodeType":"584","endLine":90,"endColumn":88},{"ruleId":"585","severity":1,"message":"586","line":101,"column":16,"nodeType":"587","endLine":101,"endColumn":20},{"ruleId":"549","severity":1,"message":"569","line":3,"column":10,"nodeType":"551","messageId":"552","endLine":3,"endColumn":16},{"ruleId":"549","severity":1,"message":"570","line":7,"column":8,"nodeType":"551","messageId":"552","endLine":7,"endColumn":22},{"ruleId":"549","severity":1,"message":"571","line":10,"column":8,"nodeType":"551","messageId":"552","endLine":10,"endColumn":15},{"ruleId":"549","severity":1,"message":"565","line":11,"column":14,"nodeType":"551","messageId":"552","endLine":11,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":12,"column":11,"nodeType":"551","messageId":"552","endLine":12,"endColumn":19},{"ruleId":"549","severity":1,"message":"572","line":13,"column":10,"nodeType":"551","messageId":"552","endLine":13,"endColumn":21},{"ruleId":"549","severity":1,"message":"573","line":13,"column":23,"nodeType":"551","messageId":"552","endLine":13,"endColumn":30},{"ruleId":"582","severity":1,"message":"583","line":69,"column":63,"nodeType":"584","endLine":69,"endColumn":88},{"ruleId":"585","severity":1,"message":"586","line":79,"column":16,"nodeType":"587","endLine":79,"endColumn":20},{"ruleId":"549","severity":1,"message":"569","line":3,"column":10,"nodeType":"551","messageId":"552","endLine":3,"endColumn":16},{"ruleId":"549","severity":1,"message":"570","line":7,"column":8,"nodeType":"551","messageId":"552","endLine":7,"endColumn":22},{"ruleId":"549","severity":1,"message":"571","line":10,"column":8,"nodeType":"551","messageId":"552","endLine":10,"endColumn":15},{"ruleId":"549","severity":1,"message":"565","line":11,"column":14,"nodeType":"551","messageId":"552","endLine":11,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":12,"column":11,"nodeType":"551","messageId":"552","endLine":12,"endColumn":19},{"ruleId":"549","severity":1,"message":"572","line":13,"column":10,"nodeType":"551","messageId":"552","endLine":13,"endColumn":21},{"ruleId":"549","severity":1,"message":"573","line":13,"column":23,"nodeType":"551","messageId":"552","endLine":13,"endColumn":30},{"ruleId":"582","severity":1,"message":"583","line":69,"column":63,"nodeType":"584","endLine":69,"endColumn":88},{"ruleId":"585","severity":1,"message":"586","line":78,"column":16,"nodeType":"587","endLine":78,"endColumn":20},{"ruleId":"549","severity":1,"message":"569","line":3,"column":10,"nodeType":"551","messageId":"552","endLine":3,"endColumn":16},{"ruleId":"549","severity":1,"message":"570","line":8,"column":8,"nodeType":"551","messageId":"552","endLine":8,"endColumn":22},{"ruleId":"549","severity":1,"message":"571","line":11,"column":8,"nodeType":"551","messageId":"552","endLine":11,"endColumn":15},{"ruleId":"549","severity":1,"message":"565","line":12,"column":14,"nodeType":"551","messageId":"552","endLine":12,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":13,"column":11,"nodeType":"551","messageId":"552","endLine":13,"endColumn":19},{"ruleId":"549","severity":1,"message":"572","line":14,"column":10,"nodeType":"551","messageId":"552","endLine":14,"endColumn":21},{"ruleId":"549","severity":1,"message":"573","line":14,"column":23,"nodeType":"551","messageId":"552","endLine":14,"endColumn":30},{"ruleId":"582","severity":1,"message":"583","line":70,"column":63,"nodeType":"584","endLine":70,"endColumn":88},{"ruleId":"585","severity":1,"message":"586","line":82,"column":16,"nodeType":"587","endLine":82,"endColumn":20},{"ruleId":"549","severity":1,"message":"569","line":3,"column":10,"nodeType":"551","messageId":"552","endLine":3,"endColumn":16},{"ruleId":"549","severity":1,"message":"570","line":7,"column":8,"nodeType":"551","messageId":"552","endLine":7,"endColumn":22},{"ruleId":"549","severity":1,"message":"571","line":10,"column":8,"nodeType":"551","messageId":"552","endLine":10,"endColumn":15},{"ruleId":"549","severity":1,"message":"565","line":11,"column":14,"nodeType":"551","messageId":"552","endLine":11,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":12,"column":11,"nodeType":"551","messageId":"552","endLine":12,"endColumn":19},{"ruleId":"549","severity":1,"message":"572","line":13,"column":10,"nodeType":"551","messageId":"552","endLine":13,"endColumn":21},{"ruleId":"549","severity":1,"message":"573","line":13,"column":23,"nodeType":"551","messageId":"552","endLine":13,"endColumn":30},{"ruleId":"582","severity":1,"message":"583","line":69,"column":63,"nodeType":"584","endLine":69,"endColumn":88},{"ruleId":"585","severity":1,"message":"586","line":83,"column":16,"nodeType":"587","endLine":83,"endColumn":20},{"ruleId":"549","severity":1,"message":"569","line":3,"column":10,"nodeType":"551","messageId":"552","endLine":3,"endColumn":16},{"ruleId":"549","severity":1,"message":"570","line":7,"column":8,"nodeType":"551","messageId":"552","endLine":7,"endColumn":22},{"ruleId":"549","severity":1,"message":"571","line":10,"column":8,"nodeType":"551","messageId":"552","endLine":10,"endColumn":15},{"ruleId":"549","severity":1,"message":"565","line":11,"column":14,"nodeType":"551","messageId":"552","endLine":11,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":12,"column":11,"nodeType":"551","messageId":"552","endLine":12,"endColumn":19},{"ruleId":"549","severity":1,"message":"572","line":13,"column":10,"nodeType":"551","messageId":"552","endLine":13,"endColumn":21},{"ruleId":"549","severity":1,"message":"573","line":13,"column":23,"nodeType":"551","messageId":"552","endLine":13,"endColumn":30},{"ruleId":"582","severity":1,"message":"583","line":69,"column":63,"nodeType":"584","endLine":69,"endColumn":88},{"ruleId":"585","severity":1,"message":"586","line":78,"column":16,"nodeType":"587","endLine":78,"endColumn":20},{"ruleId":"549","severity":1,"message":"570","line":7,"column":8,"nodeType":"551","messageId":"552","endLine":7,"endColumn":22},{"ruleId":"549","severity":1,"message":"564","line":11,"column":9,"nodeType":"551","messageId":"552","endLine":11,"endColumn":13},{"ruleId":"549","severity":1,"message":"565","line":11,"column":14,"nodeType":"551","messageId":"552","endLine":11,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":12,"column":11,"nodeType":"551","messageId":"552","endLine":12,"endColumn":19},{"ruleId":"549","severity":1,"message":"572","line":13,"column":10,"nodeType":"551","messageId":"552","endLine":13,"endColumn":21},{"ruleId":"549","severity":1,"message":"573","line":13,"column":23,"nodeType":"551","messageId":"552","endLine":13,"endColumn":30},{"ruleId":"574","severity":1,"message":"575","line":45,"column":39,"nodeType":"576","messageId":"577","endLine":45,"endColumn":41},{"ruleId":"549","severity":1,"message":"590","line":55,"column":17,"nodeType":"551","messageId":"552","endLine":55,"endColumn":21},{"ruleId":"574","severity":1,"message":"575","line":100,"column":21,"nodeType":"576","messageId":"577","endLine":100,"endColumn":23},{"ruleId":"578","severity":1,"message":"579","line":102,"column":17,"nodeType":"580","messageId":"581","endLine":102,"endColumn":57},{"ruleId":"574","severity":1,"message":"575","line":106,"column":40,"nodeType":"576","messageId":"577","endLine":106,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":122,"column":42,"nodeType":"576","messageId":"577","endLine":122,"endColumn":44},{"ruleId":"574","severity":1,"message":"575","line":126,"column":24,"nodeType":"576","messageId":"577","endLine":126,"endColumn":26},{"ruleId":"574","severity":1,"message":"575","line":129,"column":24,"nodeType":"576","messageId":"577","endLine":129,"endColumn":26},{"ruleId":"574","severity":1,"message":"575","line":132,"column":24,"nodeType":"576","messageId":"577","endLine":132,"endColumn":26},{"ruleId":"574","severity":1,"message":"575","line":135,"column":24,"nodeType":"576","messageId":"577","endLine":135,"endColumn":26},{"ruleId":"574","severity":1,"message":"575","line":138,"column":24,"nodeType":"576","messageId":"577","endLine":138,"endColumn":26},{"ruleId":"574","severity":1,"message":"575","line":141,"column":24,"nodeType":"576","messageId":"577","endLine":141,"endColumn":26},{"ruleId":"574","severity":1,"message":"575","line":144,"column":24,"nodeType":"576","messageId":"577","endLine":144,"endColumn":26},{"ruleId":"574","severity":1,"message":"575","line":147,"column":24,"nodeType":"576","messageId":"577","endLine":147,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":165,"column":17,"nodeType":"576","messageId":"594","endLine":165,"endColumn":18},{"ruleId":"592","severity":1,"message":"593","line":166,"column":17,"nodeType":"576","messageId":"594","endLine":166,"endColumn":18},{"ruleId":"592","severity":1,"message":"593","line":167,"column":17,"nodeType":"576","messageId":"594","endLine":167,"endColumn":18},{"ruleId":"592","severity":1,"message":"593","line":188,"column":21,"nodeType":"576","messageId":"594","endLine":188,"endColumn":22},{"ruleId":"592","severity":1,"message":"593","line":189,"column":21,"nodeType":"576","messageId":"594","endLine":189,"endColumn":22},{"ruleId":"592","severity":1,"message":"593","line":190,"column":21,"nodeType":"576","messageId":"594","endLine":190,"endColumn":22},{"ruleId":"582","severity":1,"message":"583","line":193,"column":67,"nodeType":"584","endLine":193,"endColumn":92},{"ruleId":"592","severity":1,"message":"593","line":210,"column":25,"nodeType":"576","messageId":"594","endLine":210,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":211,"column":25,"nodeType":"576","messageId":"594","endLine":211,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":212,"column":25,"nodeType":"576","messageId":"594","endLine":212,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":213,"column":25,"nodeType":"576","messageId":"594","endLine":213,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":214,"column":25,"nodeType":"576","messageId":"594","endLine":214,"endColumn":26},{"ruleId":"582","severity":1,"message":"583","line":217,"column":63,"nodeType":"584","endLine":217,"endColumn":88},{"ruleId":"592","severity":1,"message":"593","line":237,"column":25,"nodeType":"576","messageId":"594","endLine":237,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":238,"column":25,"nodeType":"576","messageId":"594","endLine":238,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":239,"column":25,"nodeType":"576","messageId":"594","endLine":239,"endColumn":26},{"ruleId":"582","severity":1,"message":"583","line":242,"column":67,"nodeType":"584","endLine":242,"endColumn":92},{"ruleId":"592","severity":1,"message":"593","line":261,"column":21,"nodeType":"576","messageId":"594","endLine":261,"endColumn":22},{"ruleId":"592","severity":1,"message":"593","line":262,"column":21,"nodeType":"576","messageId":"594","endLine":262,"endColumn":22},{"ruleId":"592","severity":1,"message":"593","line":263,"column":21,"nodeType":"576","messageId":"594","endLine":263,"endColumn":22},{"ruleId":"582","severity":1,"message":"583","line":266,"column":63,"nodeType":"584","endLine":266,"endColumn":88},{"ruleId":"592","severity":1,"message":"593","line":284,"column":21,"nodeType":"576","messageId":"594","endLine":284,"endColumn":22},{"ruleId":"592","severity":1,"message":"593","line":285,"column":21,"nodeType":"576","messageId":"594","endLine":285,"endColumn":22},{"ruleId":"592","severity":1,"message":"593","line":286,"column":21,"nodeType":"576","messageId":"594","endLine":286,"endColumn":22},{"ruleId":"582","severity":1,"message":"583","line":289,"column":63,"nodeType":"584","endLine":289,"endColumn":88},{"ruleId":"592","severity":1,"message":"593","line":307,"column":25,"nodeType":"576","messageId":"594","endLine":307,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":308,"column":25,"nodeType":"576","messageId":"594","endLine":308,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":309,"column":25,"nodeType":"576","messageId":"594","endLine":309,"endColumn":26},{"ruleId":"582","severity":1,"message":"583","line":312,"column":67,"nodeType":"584","endLine":312,"endColumn":92},{"ruleId":"592","severity":1,"message":"593","line":328,"column":21,"nodeType":"576","messageId":"594","endLine":328,"endColumn":22},{"ruleId":"592","severity":1,"message":"593","line":329,"column":21,"nodeType":"576","messageId":"594","endLine":329,"endColumn":22},{"ruleId":"592","severity":1,"message":"593","line":330,"column":21,"nodeType":"576","messageId":"594","endLine":330,"endColumn":22},{"ruleId":"582","severity":1,"message":"583","line":333,"column":63,"nodeType":"584","endLine":333,"endColumn":88},{"ruleId":"574","severity":1,"message":"591","line":376,"column":40,"nodeType":"576","messageId":"577","endLine":376,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":377,"column":40,"nodeType":"576","messageId":"577","endLine":377,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":378,"column":40,"nodeType":"576","messageId":"577","endLine":378,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":379,"column":40,"nodeType":"576","messageId":"577","endLine":379,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":380,"column":40,"nodeType":"576","messageId":"577","endLine":380,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":381,"column":40,"nodeType":"576","messageId":"577","endLine":381,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":382,"column":40,"nodeType":"576","messageId":"577","endLine":382,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":383,"column":40,"nodeType":"576","messageId":"577","endLine":383,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":384,"column":40,"nodeType":"576","messageId":"577","endLine":384,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":385,"column":40,"nodeType":"576","messageId":"577","endLine":385,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":386,"column":40,"nodeType":"576","messageId":"577","endLine":386,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":387,"column":40,"nodeType":"576","messageId":"577","endLine":387,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":388,"column":40,"nodeType":"576","messageId":"577","endLine":388,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":389,"column":40,"nodeType":"576","messageId":"577","endLine":389,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":390,"column":40,"nodeType":"576","messageId":"577","endLine":390,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":391,"column":40,"nodeType":"576","messageId":"577","endLine":391,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":401,"column":41,"nodeType":"576","messageId":"577","endLine":401,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":402,"column":41,"nodeType":"576","messageId":"577","endLine":402,"endColumn":43},{"ruleId":"574","severity":1,"message":"591","line":403,"column":41,"nodeType":"576","messageId":"577","endLine":403,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":404,"column":41,"nodeType":"576","messageId":"577","endLine":404,"endColumn":43},{"ruleId":"574","severity":1,"message":"591","line":405,"column":41,"nodeType":"576","messageId":"577","endLine":405,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":406,"column":41,"nodeType":"576","messageId":"577","endLine":406,"endColumn":43},{"ruleId":"574","severity":1,"message":"591","line":407,"column":41,"nodeType":"576","messageId":"577","endLine":407,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":408,"column":41,"nodeType":"576","messageId":"577","endLine":408,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":419,"column":33,"nodeType":"576","messageId":"577","endLine":419,"endColumn":35},{"ruleId":"574","severity":1,"message":"591","line":422,"column":42,"nodeType":"576","messageId":"577","endLine":422,"endColumn":44},{"ruleId":"574","severity":1,"message":"575","line":443,"column":36,"nodeType":"576","messageId":"577","endLine":443,"endColumn":38},{"ruleId":"574","severity":1,"message":"591","line":446,"column":42,"nodeType":"576","messageId":"577","endLine":446,"endColumn":44},{"ruleId":"574","severity":1,"message":"575","line":466,"column":36,"nodeType":"576","messageId":"577","endLine":466,"endColumn":38},{"ruleId":"574","severity":1,"message":"591","line":468,"column":42,"nodeType":"576","messageId":"577","endLine":468,"endColumn":44},{"ruleId":"574","severity":1,"message":"575","line":490,"column":36,"nodeType":"576","messageId":"577","endLine":490,"endColumn":38},{"ruleId":"574","severity":1,"message":"591","line":492,"column":42,"nodeType":"576","messageId":"577","endLine":492,"endColumn":44},{"ruleId":"574","severity":1,"message":"575","line":511,"column":36,"nodeType":"576","messageId":"577","endLine":511,"endColumn":38},{"ruleId":"574","severity":1,"message":"591","line":513,"column":42,"nodeType":"576","messageId":"577","endLine":513,"endColumn":44},{"ruleId":"574","severity":1,"message":"575","line":531,"column":36,"nodeType":"576","messageId":"577","endLine":531,"endColumn":38},{"ruleId":"574","severity":1,"message":"591","line":532,"column":42,"nodeType":"576","messageId":"577","endLine":532,"endColumn":44},{"ruleId":"574","severity":1,"message":"575","line":553,"column":36,"nodeType":"576","messageId":"577","endLine":553,"endColumn":38},{"ruleId":"574","severity":1,"message":"591","line":554,"column":42,"nodeType":"576","messageId":"577","endLine":554,"endColumn":44},{"ruleId":"574","severity":1,"message":"575","line":573,"column":36,"nodeType":"576","messageId":"577","endLine":573,"endColumn":38},{"ruleId":"574","severity":1,"message":"591","line":577,"column":42,"nodeType":"576","messageId":"577","endLine":577,"endColumn":44},{"ruleId":"574","severity":1,"message":"591","line":624,"column":40,"nodeType":"576","messageId":"577","endLine":624,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":625,"column":40,"nodeType":"576","messageId":"577","endLine":625,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":626,"column":40,"nodeType":"576","messageId":"577","endLine":626,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":627,"column":40,"nodeType":"576","messageId":"577","endLine":627,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":630,"column":40,"nodeType":"576","messageId":"577","endLine":630,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":631,"column":40,"nodeType":"576","messageId":"577","endLine":631,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":632,"column":40,"nodeType":"576","messageId":"577","endLine":632,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":633,"column":40,"nodeType":"576","messageId":"577","endLine":633,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":636,"column":40,"nodeType":"576","messageId":"577","endLine":636,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":637,"column":40,"nodeType":"576","messageId":"577","endLine":637,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":638,"column":40,"nodeType":"576","messageId":"577","endLine":638,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":639,"column":40,"nodeType":"576","messageId":"577","endLine":639,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":641,"column":40,"nodeType":"576","messageId":"577","endLine":641,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":642,"column":40,"nodeType":"576","messageId":"577","endLine":642,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":644,"column":40,"nodeType":"576","messageId":"577","endLine":644,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":645,"column":40,"nodeType":"576","messageId":"577","endLine":645,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":655,"column":41,"nodeType":"576","messageId":"577","endLine":655,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":656,"column":41,"nodeType":"576","messageId":"577","endLine":656,"endColumn":43},{"ruleId":"574","severity":1,"message":"591","line":657,"column":41,"nodeType":"576","messageId":"577","endLine":657,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":658,"column":41,"nodeType":"576","messageId":"577","endLine":658,"endColumn":43},{"ruleId":"574","severity":1,"message":"591","line":659,"column":41,"nodeType":"576","messageId":"577","endLine":659,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":660,"column":41,"nodeType":"576","messageId":"577","endLine":660,"endColumn":43},{"ruleId":"574","severity":1,"message":"591","line":661,"column":41,"nodeType":"576","messageId":"577","endLine":661,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":662,"column":41,"nodeType":"576","messageId":"577","endLine":662,"endColumn":43},{"ruleId":"549","severity":1,"message":"570","line":7,"column":8,"nodeType":"551","messageId":"552","endLine":7,"endColumn":22},{"ruleId":"549","severity":1,"message":"564","line":11,"column":9,"nodeType":"551","messageId":"552","endLine":11,"endColumn":13},{"ruleId":"549","severity":1,"message":"565","line":11,"column":14,"nodeType":"551","messageId":"552","endLine":11,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":12,"column":11,"nodeType":"551","messageId":"552","endLine":12,"endColumn":19},{"ruleId":"549","severity":1,"message":"572","line":13,"column":10,"nodeType":"551","messageId":"552","endLine":13,"endColumn":21},{"ruleId":"549","severity":1,"message":"573","line":13,"column":39,"nodeType":"551","messageId":"552","endLine":13,"endColumn":46},{"ruleId":"574","severity":1,"message":"575","line":45,"column":39,"nodeType":"576","messageId":"577","endLine":45,"endColumn":41},{"ruleId":"549","severity":1,"message":"590","line":55,"column":17,"nodeType":"551","messageId":"552","endLine":55,"endColumn":21},{"ruleId":"574","severity":1,"message":"575","line":100,"column":21,"nodeType":"576","messageId":"577","endLine":100,"endColumn":23},{"ruleId":"578","severity":1,"message":"579","line":102,"column":17,"nodeType":"580","messageId":"581","endLine":102,"endColumn":57},{"ruleId":"574","severity":1,"message":"575","line":106,"column":40,"nodeType":"576","messageId":"577","endLine":106,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":123,"column":42,"nodeType":"576","messageId":"577","endLine":123,"endColumn":44},{"ruleId":"574","severity":1,"message":"575","line":127,"column":24,"nodeType":"576","messageId":"577","endLine":127,"endColumn":26},{"ruleId":"574","severity":1,"message":"575","line":130,"column":24,"nodeType":"576","messageId":"577","endLine":130,"endColumn":26},{"ruleId":"574","severity":1,"message":"575","line":133,"column":24,"nodeType":"576","messageId":"577","endLine":133,"endColumn":26},{"ruleId":"574","severity":1,"message":"575","line":136,"column":24,"nodeType":"576","messageId":"577","endLine":136,"endColumn":26},{"ruleId":"574","severity":1,"message":"575","line":139,"column":24,"nodeType":"576","messageId":"577","endLine":139,"endColumn":26},{"ruleId":"574","severity":1,"message":"575","line":142,"column":24,"nodeType":"576","messageId":"577","endLine":142,"endColumn":26},{"ruleId":"574","severity":1,"message":"575","line":145,"column":24,"nodeType":"576","messageId":"577","endLine":145,"endColumn":26},{"ruleId":"574","severity":1,"message":"575","line":148,"column":24,"nodeType":"576","messageId":"577","endLine":148,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":166,"column":17,"nodeType":"576","messageId":"594","endLine":166,"endColumn":18},{"ruleId":"592","severity":1,"message":"593","line":167,"column":17,"nodeType":"576","messageId":"594","endLine":167,"endColumn":18},{"ruleId":"592","severity":1,"message":"593","line":168,"column":17,"nodeType":"576","messageId":"594","endLine":168,"endColumn":18},{"ruleId":"592","severity":1,"message":"593","line":195,"column":21,"nodeType":"576","messageId":"594","endLine":195,"endColumn":22},{"ruleId":"592","severity":1,"message":"593","line":196,"column":21,"nodeType":"576","messageId":"594","endLine":196,"endColumn":22},{"ruleId":"592","severity":1,"message":"593","line":197,"column":21,"nodeType":"576","messageId":"594","endLine":197,"endColumn":22},{"ruleId":"582","severity":1,"message":"583","line":200,"column":67,"nodeType":"584","endLine":200,"endColumn":92},{"ruleId":"592","severity":1,"message":"593","line":217,"column":25,"nodeType":"576","messageId":"594","endLine":217,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":218,"column":25,"nodeType":"576","messageId":"594","endLine":218,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":219,"column":25,"nodeType":"576","messageId":"594","endLine":219,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":220,"column":25,"nodeType":"576","messageId":"594","endLine":220,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":221,"column":25,"nodeType":"576","messageId":"594","endLine":221,"endColumn":26},{"ruleId":"582","severity":1,"message":"583","line":224,"column":63,"nodeType":"584","endLine":224,"endColumn":88},{"ruleId":"592","severity":1,"message":"593","line":244,"column":25,"nodeType":"576","messageId":"594","endLine":244,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":245,"column":25,"nodeType":"576","messageId":"594","endLine":245,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":246,"column":25,"nodeType":"576","messageId":"594","endLine":246,"endColumn":26},{"ruleId":"582","severity":1,"message":"583","line":249,"column":67,"nodeType":"584","endLine":249,"endColumn":92},{"ruleId":"592","severity":1,"message":"593","line":268,"column":21,"nodeType":"576","messageId":"594","endLine":268,"endColumn":22},{"ruleId":"592","severity":1,"message":"593","line":269,"column":21,"nodeType":"576","messageId":"594","endLine":269,"endColumn":22},{"ruleId":"592","severity":1,"message":"593","line":270,"column":21,"nodeType":"576","messageId":"594","endLine":270,"endColumn":22},{"ruleId":"582","severity":1,"message":"583","line":273,"column":63,"nodeType":"584","endLine":273,"endColumn":88},{"ruleId":"592","severity":1,"message":"593","line":291,"column":21,"nodeType":"576","messageId":"594","endLine":291,"endColumn":22},{"ruleId":"592","severity":1,"message":"593","line":292,"column":21,"nodeType":"576","messageId":"594","endLine":292,"endColumn":22},{"ruleId":"592","severity":1,"message":"593","line":293,"column":21,"nodeType":"576","messageId":"594","endLine":293,"endColumn":22},{"ruleId":"582","severity":1,"message":"583","line":296,"column":63,"nodeType":"584","endLine":296,"endColumn":88},{"ruleId":"592","severity":1,"message":"593","line":314,"column":25,"nodeType":"576","messageId":"594","endLine":314,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":315,"column":25,"nodeType":"576","messageId":"594","endLine":315,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":316,"column":25,"nodeType":"576","messageId":"594","endLine":316,"endColumn":26},{"ruleId":"582","severity":1,"message":"583","line":319,"column":67,"nodeType":"584","endLine":319,"endColumn":92},{"ruleId":"592","severity":1,"message":"593","line":335,"column":21,"nodeType":"576","messageId":"594","endLine":335,"endColumn":22},{"ruleId":"592","severity":1,"message":"593","line":336,"column":21,"nodeType":"576","messageId":"594","endLine":336,"endColumn":22},{"ruleId":"592","severity":1,"message":"593","line":337,"column":21,"nodeType":"576","messageId":"594","endLine":337,"endColumn":22},{"ruleId":"582","severity":1,"message":"583","line":340,"column":63,"nodeType":"584","endLine":340,"endColumn":88},{"ruleId":"574","severity":1,"message":"591","line":384,"column":40,"nodeType":"576","messageId":"577","endLine":384,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":385,"column":40,"nodeType":"576","messageId":"577","endLine":385,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":386,"column":40,"nodeType":"576","messageId":"577","endLine":386,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":387,"column":40,"nodeType":"576","messageId":"577","endLine":387,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":390,"column":40,"nodeType":"576","messageId":"577","endLine":390,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":391,"column":40,"nodeType":"576","messageId":"577","endLine":391,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":392,"column":40,"nodeType":"576","messageId":"577","endLine":392,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":393,"column":40,"nodeType":"576","messageId":"577","endLine":393,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":396,"column":40,"nodeType":"576","messageId":"577","endLine":396,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":397,"column":40,"nodeType":"576","messageId":"577","endLine":397,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":398,"column":40,"nodeType":"576","messageId":"577","endLine":398,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":399,"column":40,"nodeType":"576","messageId":"577","endLine":399,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":401,"column":40,"nodeType":"576","messageId":"577","endLine":401,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":402,"column":40,"nodeType":"576","messageId":"577","endLine":402,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":404,"column":40,"nodeType":"576","messageId":"577","endLine":404,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":405,"column":40,"nodeType":"576","messageId":"577","endLine":405,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":415,"column":41,"nodeType":"576","messageId":"577","endLine":415,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":416,"column":41,"nodeType":"576","messageId":"577","endLine":416,"endColumn":43},{"ruleId":"574","severity":1,"message":"591","line":417,"column":41,"nodeType":"576","messageId":"577","endLine":417,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":418,"column":41,"nodeType":"576","messageId":"577","endLine":418,"endColumn":43},{"ruleId":"574","severity":1,"message":"591","line":419,"column":41,"nodeType":"576","messageId":"577","endLine":419,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":420,"column":41,"nodeType":"576","messageId":"577","endLine":420,"endColumn":43},{"ruleId":"574","severity":1,"message":"591","line":421,"column":41,"nodeType":"576","messageId":"577","endLine":421,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":422,"column":41,"nodeType":"576","messageId":"577","endLine":422,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":433,"column":33,"nodeType":"576","messageId":"577","endLine":433,"endColumn":35},{"ruleId":"574","severity":1,"message":"591","line":436,"column":42,"nodeType":"576","messageId":"577","endLine":436,"endColumn":44},{"ruleId":"574","severity":1,"message":"575","line":457,"column":36,"nodeType":"576","messageId":"577","endLine":457,"endColumn":38},{"ruleId":"574","severity":1,"message":"591","line":460,"column":42,"nodeType":"576","messageId":"577","endLine":460,"endColumn":44},{"ruleId":"574","severity":1,"message":"575","line":480,"column":36,"nodeType":"576","messageId":"577","endLine":480,"endColumn":38},{"ruleId":"574","severity":1,"message":"591","line":482,"column":42,"nodeType":"576","messageId":"577","endLine":482,"endColumn":44},{"ruleId":"574","severity":1,"message":"575","line":504,"column":36,"nodeType":"576","messageId":"577","endLine":504,"endColumn":38},{"ruleId":"574","severity":1,"message":"591","line":506,"column":42,"nodeType":"576","messageId":"577","endLine":506,"endColumn":44},{"ruleId":"574","severity":1,"message":"575","line":525,"column":36,"nodeType":"576","messageId":"577","endLine":525,"endColumn":38},{"ruleId":"574","severity":1,"message":"591","line":527,"column":42,"nodeType":"576","messageId":"577","endLine":527,"endColumn":44},{"ruleId":"574","severity":1,"message":"575","line":545,"column":36,"nodeType":"576","messageId":"577","endLine":545,"endColumn":38},{"ruleId":"574","severity":1,"message":"591","line":546,"column":42,"nodeType":"576","messageId":"577","endLine":546,"endColumn":44},{"ruleId":"574","severity":1,"message":"575","line":567,"column":36,"nodeType":"576","messageId":"577","endLine":567,"endColumn":38},{"ruleId":"574","severity":1,"message":"591","line":568,"column":42,"nodeType":"576","messageId":"577","endLine":568,"endColumn":44},{"ruleId":"574","severity":1,"message":"575","line":587,"column":36,"nodeType":"576","messageId":"577","endLine":587,"endColumn":38},{"ruleId":"574","severity":1,"message":"591","line":591,"column":42,"nodeType":"576","messageId":"577","endLine":591,"endColumn":44},{"ruleId":"574","severity":1,"message":"591","line":637,"column":40,"nodeType":"576","messageId":"577","endLine":637,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":638,"column":40,"nodeType":"576","messageId":"577","endLine":638,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":639,"column":40,"nodeType":"576","messageId":"577","endLine":639,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":640,"column":40,"nodeType":"576","messageId":"577","endLine":640,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":641,"column":40,"nodeType":"576","messageId":"577","endLine":641,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":642,"column":40,"nodeType":"576","messageId":"577","endLine":642,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":643,"column":40,"nodeType":"576","messageId":"577","endLine":643,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":644,"column":40,"nodeType":"576","messageId":"577","endLine":644,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":645,"column":40,"nodeType":"576","messageId":"577","endLine":645,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":646,"column":40,"nodeType":"576","messageId":"577","endLine":646,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":647,"column":40,"nodeType":"576","messageId":"577","endLine":647,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":648,"column":40,"nodeType":"576","messageId":"577","endLine":648,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":649,"column":40,"nodeType":"576","messageId":"577","endLine":649,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":650,"column":40,"nodeType":"576","messageId":"577","endLine":650,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":651,"column":40,"nodeType":"576","messageId":"577","endLine":651,"endColumn":42},{"ruleId":"574","severity":1,"message":"575","line":652,"column":40,"nodeType":"576","messageId":"577","endLine":652,"endColumn":42},{"ruleId":"574","severity":1,"message":"591","line":662,"column":41,"nodeType":"576","messageId":"577","endLine":662,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":663,"column":41,"nodeType":"576","messageId":"577","endLine":663,"endColumn":43},{"ruleId":"574","severity":1,"message":"591","line":664,"column":41,"nodeType":"576","messageId":"577","endLine":664,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":665,"column":41,"nodeType":"576","messageId":"577","endLine":665,"endColumn":43},{"ruleId":"574","severity":1,"message":"591","line":666,"column":41,"nodeType":"576","messageId":"577","endLine":666,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":667,"column":41,"nodeType":"576","messageId":"577","endLine":667,"endColumn":43},{"ruleId":"574","severity":1,"message":"591","line":668,"column":41,"nodeType":"576","messageId":"577","endLine":668,"endColumn":43},{"ruleId":"574","severity":1,"message":"575","line":669,"column":41,"nodeType":"576","messageId":"577","endLine":669,"endColumn":43},{"ruleId":"549","severity":1,"message":"563","line":2,"column":8,"nodeType":"551","messageId":"552","endLine":2,"endColumn":13},{"ruleId":"549","severity":1,"message":"569","line":3,"column":10,"nodeType":"551","messageId":"552","endLine":3,"endColumn":16},{"ruleId":"549","severity":1,"message":"595","line":3,"column":18,"nodeType":"551","messageId":"552","endLine":3,"endColumn":23},{"ruleId":"549","severity":1,"message":"596","line":4,"column":8,"nodeType":"551","messageId":"552","endLine":4,"endColumn":16},{"ruleId":"549","severity":1,"message":"570","line":7,"column":8,"nodeType":"551","messageId":"552","endLine":7,"endColumn":22},{"ruleId":"549","severity":1,"message":"597","line":9,"column":8,"nodeType":"551","messageId":"552","endLine":9,"endColumn":19},{"ruleId":"549","severity":1,"message":"571","line":10,"column":8,"nodeType":"551","messageId":"552","endLine":10,"endColumn":15},{"ruleId":"549","severity":1,"message":"565","line":11,"column":14,"nodeType":"551","messageId":"552","endLine":11,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":12,"column":11,"nodeType":"551","messageId":"552","endLine":12,"endColumn":19},{"ruleId":"549","severity":1,"message":"572","line":13,"column":10,"nodeType":"551","messageId":"552","endLine":13,"endColumn":21},{"ruleId":"549","severity":1,"message":"573","line":13,"column":23,"nodeType":"551","messageId":"552","endLine":13,"endColumn":30},{"ruleId":"549","severity":1,"message":"598","line":13,"column":32,"nodeType":"551","messageId":"552","endLine":13,"endColumn":43},{"ruleId":"549","severity":1,"message":"563","line":2,"column":8,"nodeType":"551","messageId":"552","endLine":2,"endColumn":13},{"ruleId":"549","severity":1,"message":"569","line":3,"column":10,"nodeType":"551","messageId":"552","endLine":3,"endColumn":16},{"ruleId":"549","severity":1,"message":"595","line":3,"column":18,"nodeType":"551","messageId":"552","endLine":3,"endColumn":23},{"ruleId":"549","severity":1,"message":"596","line":4,"column":8,"nodeType":"551","messageId":"552","endLine":4,"endColumn":16},{"ruleId":"549","severity":1,"message":"570","line":7,"column":8,"nodeType":"551","messageId":"552","endLine":7,"endColumn":22},{"ruleId":"549","severity":1,"message":"597","line":9,"column":8,"nodeType":"551","messageId":"552","endLine":9,"endColumn":19},{"ruleId":"549","severity":1,"message":"571","line":10,"column":8,"nodeType":"551","messageId":"552","endLine":10,"endColumn":15},{"ruleId":"549","severity":1,"message":"565","line":11,"column":14,"nodeType":"551","messageId":"552","endLine":11,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":12,"column":11,"nodeType":"551","messageId":"552","endLine":12,"endColumn":19},{"ruleId":"549","severity":1,"message":"572","line":13,"column":10,"nodeType":"551","messageId":"552","endLine":13,"endColumn":21},{"ruleId":"549","severity":1,"message":"573","line":13,"column":23,"nodeType":"551","messageId":"552","endLine":13,"endColumn":30},{"ruleId":"549","severity":1,"message":"598","line":13,"column":32,"nodeType":"551","messageId":"552","endLine":13,"endColumn":43},{"ruleId":"549","severity":1,"message":"563","line":2,"column":8,"nodeType":"551","messageId":"552","endLine":2,"endColumn":13},{"ruleId":"549","severity":1,"message":"569","line":3,"column":10,"nodeType":"551","messageId":"552","endLine":3,"endColumn":16},{"ruleId":"549","severity":1,"message":"595","line":3,"column":18,"nodeType":"551","messageId":"552","endLine":3,"endColumn":23},{"ruleId":"549","severity":1,"message":"597","line":9,"column":8,"nodeType":"551","messageId":"552","endLine":9,"endColumn":19},{"ruleId":"549","severity":1,"message":"571","line":10,"column":8,"nodeType":"551","messageId":"552","endLine":10,"endColumn":15},{"ruleId":"549","severity":1,"message":"565","line":11,"column":14,"nodeType":"551","messageId":"552","endLine":11,"endColumn":21},{"ruleId":"549","severity":1,"message":"566","line":12,"column":11,"nodeType":"551","messageId":"552","endLine":12,"endColumn":19},{"ruleId":"549","severity":1,"message":"572","line":13,"column":10,"nodeType":"551","messageId":"552","endLine":13,"endColumn":21},{"ruleId":"549","severity":1,"message":"573","line":13,"column":23,"nodeType":"551","messageId":"552","endLine":13,"endColumn":30},{"ruleId":"549","severity":1,"message":"598","line":13,"column":32,"nodeType":"551","messageId":"552","endLine":13,"endColumn":43},{"ruleId":null,"fatal":true,"severity":2,"message":"599","line":91,"column":25},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'store' is assigned a value but never used.","no-native-reassign",["600"],"no-negated-in-lhs",["601"],["600"],["601"],"'logo' is defined but never used.","'BrowserRouter' is defined but never used.","'Switch' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'Redirect' is defined but never used.",["600"],["601"],"'Button' is defined but never used.","'DropdownButton' is defined but never used.","'history' is defined but never used.","'CheckCircle' is defined but never used.","'XCircle' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["600"],["601"],"'reqs' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Table' is defined but never used.","'Dropdown' is defined but never used.","'ButtonGroup' is defined but never used.","'XCircleFill' is defined but never used.","Parsing error: Unexpected token\n\n  89 |             },\n  90 |             data: {\n> 91 |                 slotNum:,\n     |                         ^\n  92 |                 slotDate:,\n  93 |                 slotLoc:\n  94 |             },","no-global-assign","no-unsafe-negation"]